{
  "swagger": "2.0",
  "info": {
    "title": "TMF651 Agreement Management",
    "description": "The Agreement API provides standardized mechanism for managing agreements, especially in the context on partnerships between partners. The API allows creation, update and query of agreement instances as well as creation, update and query of agreement specifications â€“ serving as templates for agreement instances.",
    "version": "2.0",
    "x-api-proxy-version": 1
  },
  "host": "api.developer.com",
  "basePath": "/tmf-api/agreementManagement/v2/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "apix_oauth": {
      "type": "oauth2",
      "tokenUrl": "https://api.developer.com/v1/apixoauth2password/oauth2/token",
      "flow": "application",
      "scopes": {
        "AGREEMENT_MANAGEMENT_ALL": "API Consumer is allowed to consume all the operations.",
        "AGREEMENT_MANAGEMENT_AGREEMENT_GET": "API Consumer is allowed to consume the GET agreement operation.",
        "AGREEMENT_MANAGEMENT_AGREEMENT_POST": "API Consumer is allowed to consume the POST agreement operation.",
        "AGREEMENT_MANAGEMENT_AGREEMENT_PATCH": "API Consumer is allowed to consume the PATCH agreement operation.",
        "AGREEMENT_MANAGEMENT_AGREEMENT_DELETE": "API Consumer is allowed to consume the DELETE agreement operation.",
        "AGREEMENT_MANAGEMENT_AGREEMENT_SPECIFICATION_GET": "API Consumer is allowed to consume the GET agreementSpecification operation.",
        "AGREEMENT_MANAGEMENT_AGREEMENT_SPECIFICATION_POST": "API Consumer is allowed to consume the POST agreementSpecification operation.",
        "AGREEMENT_MANAGEMENT_AGREEMENT_SPECIFICATION_PATCH": "API Consumer is allowed to consume the PATCH agreementspecification operation.",
        "AGREEMENT_MANAGEMENT_AGREEMENT_SPECIFICATION_DELETE": "API Consumer is allowed to consume the DELETE agreementSpecification operation.",
        "AGREEMENT_MANAGEMENT_HUB_POST": "API Consumer is allowed to consume the POST hub operation.",
        "AGREEMENT_MANAGEMENT_HUB_ID_DELETE": "API Consumer is allowed to consume the DELETE hub by ID operation."
      }
    }
  },
  "paths": {
    "/agreement": {
      "get": {
        "operationId": "listAgreement",
        "summary": "List or find 'Agreement' objects",
        "description": "List or find 'Agreement' objects",
        "tags": [
          "agreement"
        ],
        "parameters": [
          {
            "type": "string",
            "required": false,
            "in": "query",
            "name": "fields",
            "description": "Comma separated properties to display in response",
            "x-example": "documentNumber"
          },
          {
            "type": "integer",
            "required": false,
            "in": "query",
            "name": "offset",
            "description": "Requested index for start of resources to be provided in response",
            "x-example": 10
          },
          {
            "type": "integer",
            "required": false,
            "in": "query",
            "name": "limit",
            "description": "Requested number of resources to be provided in response",
            "x-example": 10
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "items": {
                "$ref": "#/definitions/Agreement"
              },
              "type": "array"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "examples": {
              "application/json": [
                {
                  "agreementPeriod": {
                    "endDateTime": "2018-06-08T00:00",
                    "startDateTime": "2019-01-07T00:00"
                  },
                  "completionDate": {
                    "endDateTime": "2016-10-16",
                    "startDateTime": "2016-10-16"
                  },
                  "description": "This is a test agreement",
                  "documentNumber": 12,
                  "href": "https://host:port/tmf-api/agreementManagement/v2/agreement/3582",
                  "id": "3582",
                  "initialDate": "2014-12-06",
                  "name": "Summer Contract Agreement",
                  "statementOfIntent": "Agreement on restricting the working hours",
                  "status": "process",
                  "type": "commercial",
                  "version": "1,5",
                  "agreementSpecification": {
                    "description": "This agreement specification defines the environment protection rules to be followed by each party.",
                    "href": "https://host:port/tmf-api/agreementManagement/v2/agreementSpecification/2186",
                    "id": "2186",
                    "name": "Purchase Agreement Specification",
                    "@referredType": "a string..."
                  },
                  "agreementItem": [
                    {
                      "productOffering": [
                        {
                          "href": "https://host:port/tmf-api/productCatalogManagement/v2/productOffering/1308",
                          "id": "1308",
                          "name": "My Quick BB Offer",
                          "@referredType": "a string..."
                        }
                      ]
                    },
                    {
                      "termOrCondition": {
                        "description": "This agreement term or condition...",
                        "id": "7482",
                        "validFor": {
                          "endDateTime": "2019-01-07T00:00",
                          "startDateTime": "2018-06-07T00:00"
                        },
                        "@type": "a string..."
                      },
                      "@type": "a string..."
                    }
                  ],
                  "engagedPartyRole": [
                    {
                      "href": "https://host:port/tmf-api/partyRole/v2/partyRole/5057",
                      "id": "5057",
                      "name": "Supplier",
                      "partyId": "786",
                      "partyName": "Zero Bug LTD",
                      "@referredType": "a string..."
                    }
                  ],
                  "agreementAuthorization": [
                    {
                      "date": "2018-06-11T00:00",
                      "signatureRepresentation": "Dr Mabuse",
                      "state": "rejected",
                      "@type": "a string..."
                    }
                  ],
                  "characteristic": [
                    {
                      "name": "country",
                      "value": "France",
                      "@type": "a string...",
                      "@schemaLocation": "a string..."
                    },
                    {
                      "name": "confidentialLevel",
                      "value": "low",
                      "@type": "a string...",
                      "@schemaLocation": "a string..."
                    }
                  ],
                  "associatedAgreement": [
                    {
                      "href": "https://host:port/tmf-api/agreementManagement/v2/agreement/3670",
                      "id": "string",
                      "name": "General Partnership Agreement",
                      "@referredType": "string"
                    }
                  ],
                  "@type": "string",
                  "@schemaLocation": "string",
                  "@baseType": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_AGREEMENT_GET"
            ]
          }
        ]
      },
      "post": {
        "operationId": "createAgreement",
        "summary": "Creates a 'Agreement'",
        "description": "Creates a 'Agreement'",
        "tags": [
          "agreement"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/Agreement_Create"
            },
            "required": true,
            "in": "body",
            "name": "agreement",
            "description": "The Agreement to be created",
            "x-example": {
              "application/json": {
                "agreementPeriod": {
                  "endDateTime": "2018-06-08T00:00",
                  "startDateTime": "2019-01-07T00:00"
                },
                "completionDate": {
                  "endDateTime": "2016-10-16",
                  "startDateTime": "2016-10-16"
                },
                "description": "This is a test agreement",
                "documentNumber": 12,
                "initialDate": "2014-12-06",
                "name": "Summer Contract Agreement",
                "statementOfIntent": "Agreement on restricting the working hours",
                "status": "process",
                "type": "commercial",
                "version": "1,5",
                "agreementSpecification": {
                  "description": "This agreement specification defines the environment protection rules to be followed by each party.",
                  "href": "https://host:port/tmf-api/agreementManagement/v2/agreementSpecification/2186",
                  "id": "2186",
                  "name": "Purchase Agreement Specification",
                  "@referredType": "a string..."
                },
                "agreementItem": [
                  {
                    "productOffering": [
                      {
                        "href": "https://host:port/tmf-api/productCatalogManagement/v2/productOffering/1308",
                        "id": "1308",
                        "name": "My Quick BB Offer",
                        "@referredType": "a string..."
                      }
                    ]
                  },
                  {
                    "termOrCondition": {
                      "description": "This agreement term or condition...",
                      "id": "7482",
                      "validFor": {
                        "endDateTime": "2019-01-07T00:00",
                        "startDateTime": "2018-06-07T00:00"
                      },
                      "@type": "a string..."
                    },
                    "@type": "a string..."
                  }
                ],
                "engagedPartyRole": [
                  {
                    "href": "https://host:port/tmf-api/partyRole/v2/partyRole/5057",
                    "id": "5057",
                    "name": "Supplier",
                    "partyId": "786",
                    "partyName": "Zero Bug LTD",
                    "@referredType": "a string..."
                  }
                ],
                "agreementAuthorization": [
                  {
                    "date": "2018-06-11T00:00",
                    "signatureRepresentation": "Dr Mabuse",
                    "state": "rejected",
                    "@type": "a string..."
                  }
                ],
                "characteristic": [
                  {
                    "name": "country",
                    "value": "France",
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  },
                  {
                    "name": "confidentialLevel",
                    "value": "low",
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  }
                ],
                "associatedAgreement": [
                  {
                    "href": "https://host:port/tmf-api/agreementManagement/v2/agreement/3670",
                    "id": "string",
                    "name": "General Partnership Agreement",
                    "@referredType": "string"
                  }
                ],
                "@type": "string",
                "@schemaLocation": "string",
                "@baseType": "string"
              }
            }
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": true,
            "x-example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Agreement"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "agreementPeriod": {
                  "endDateTime": "2018-06-08T00:00",
                  "startDateTime": "2019-01-07T00:00"
                },
                "completionDate": {
                  "endDateTime": "2016-10-16",
                  "startDateTime": "2016-10-16"
                },
                "description": "This is a test agreement",
                "documentNumber": 12,
                "href": "https://host:port/tmf-api/agreementManagement/v2/agreement/3582",
                "id": "3582",
                "initialDate": "2014-12-06",
                "name": "Summer Contract Agreement",
                "statementOfIntent": "Agreement on restricting the working hours",
                "status": "process",
                "type": "commercial",
                "version": "1,5",
                "agreementSpecification": {
                  "description": "This agreement specification defines the environment protection rules to be followed by each party.",
                  "href": "https://host:port/tmf-api/agreementManagement/v2/agreementSpecification/2186",
                  "id": "2186",
                  "name": "Purchase Agreement Specification",
                  "@referredType": "a string..."
                },
                "agreementItem": [
                  {
                    "productOffering": [
                      {
                        "href": "https://host:port/tmf-api/productCatalogManagement/v2/productOffering/1308",
                        "id": "1308",
                        "name": "My Quick BB Offer",
                        "@referredType": "a string..."
                      }
                    ]
                  },
                  {
                    "termOrCondition": {
                      "description": "This agreement term or condition...",
                      "id": "7482",
                      "validFor": {
                        "endDateTime": "2019-01-07T00:00",
                        "startDateTime": "2018-06-07T00:00"
                      },
                      "@type": "a string..."
                    },
                    "@type": "a string..."
                  }
                ],
                "engagedPartyRole": [
                  {
                    "href": "https://host:port/tmf-api/partyRole/v2/partyRole/5057",
                    "id": "5057",
                    "name": "Supplier",
                    "partyId": "786",
                    "partyName": "Zero Bug LTD",
                    "@referredType": "a string..."
                  }
                ],
                "agreementAuthorization": [
                  {
                    "date": "2018-06-11T00:00",
                    "signatureRepresentation": "Dr Mabuse",
                    "state": "rejected",
                    "@type": "a string..."
                  }
                ],
                "characteristic": [
                  {
                    "name": "country",
                    "value": "France",
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  },
                  {
                    "name": "confidentialLevel",
                    "value": "low",
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  }
                ],
                "associatedAgreement": [
                  {
                    "href": "https://host:port/tmf-api/agreementManagement/v2/agreement/3670",
                    "id": "string",
                    "name": "General Partnership Agreement",
                    "@referredType": "string"
                  }
                ],
                "@type": "string",
                "@schemaLocation": "string",
                "@baseType": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_AGREEMENT_POST"
            ]
          }
        ]
      }
    },
    "/agreement/{id}": {
      "get": {
        "operationId": "retrieveAgreement",
        "summary": "Retrieves a 'Agreement' by Id",
        "description": "Retrieves a 'Agreement' by Id",
        "tags": [
          "agreement"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path",
            "description": "Identifier of the Agreement",
            "x-example": 3582
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "items": {
                "$ref": "#/definitions/Agreement"
              },
              "type": "array"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "agreementPeriod": {
                  "endDateTime": "2018-06-08T00:00",
                  "startDateTime": "2019-01-07T00:00"
                },
                "completionDate": {
                  "endDateTime": "2016-10-16",
                  "startDateTime": "2016-10-16"
                },
                "description": "This is a test agreement",
                "documentNumber": 12,
                "href": "https://host:port/tmf-api/agreementManagement/v2/agreement/3582",
                "id": "3582",
                "initialDate": "2014-12-06",
                "name": "Summer Contract Agreement",
                "statementOfIntent": "Agreement on restricting the working hours",
                "status": "process",
                "type": "commercial",
                "version": "1,5",
                "agreementSpecification": {
                  "description": "This agreement specification defines the environment protection rules to be followed by each party.",
                  "href": "https://host:port/tmf-api/agreementManagement/v2/agreementSpecification/2186",
                  "id": "2186",
                  "name": "Purchase Agreement Specification",
                  "@referredType": "a string..."
                },
                "agreementItem": [
                  {
                    "productOffering": [
                      {
                        "href": "https://host:port/tmf-api/productCatalogManagement/v2/productOffering/1308",
                        "id": "1308",
                        "name": "My Quick BB Offer",
                        "@referredType": "a string..."
                      }
                    ]
                  },
                  {
                    "termOrCondition": {
                      "description": "This agreement term or condition...",
                      "id": "7482",
                      "validFor": {
                        "endDateTime": "2019-01-07T00:00",
                        "startDateTime": "2018-06-07T00:00"
                      },
                      "@type": "a string..."
                    },
                    "@type": "a string..."
                  }
                ],
                "engagedPartyRole": [
                  {
                    "href": "https://host:port/tmf-api/partyRole/v2/partyRole/5057",
                    "id": "5057",
                    "name": "Supplier",
                    "partyId": "786",
                    "partyName": "Zero Bug LTD",
                    "@referredType": "a string..."
                  }
                ],
                "agreementAuthorization": [
                  {
                    "date": "2018-06-11T00:00",
                    "signatureRepresentation": "Dr Mabuse",
                    "state": "rejected",
                    "@type": "a string..."
                  }
                ],
                "characteristic": [
                  {
                    "name": "country",
                    "value": "France",
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  },
                  {
                    "name": "confidentialLevel",
                    "value": "low",
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  }
                ],
                "associatedAgreement": [
                  {
                    "href": "https://host:port/tmf-api/agreementManagement/v2/agreement/3670",
                    "id": "string",
                    "name": "General Partnership Agreement",
                    "@referredType": "string"
                  }
                ],
                "@type": "string",
                "@schemaLocation": "string",
                "@baseType": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_AGREEMENT_GET"
            ]
          }
        ]
      },
      "patch": {
        "operationId": "patchAgreement",
        "summary": "Updates partially a 'Agreement' by Id",
        "description": "Updates partially a 'Agreement' by Id",
        "tags": [
          "agreement"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path",
            "description": "Identifier of the Agreement",
            "x-example": 3582
          },
          {
            "schema": {
              "$ref": "#/definitions/Agreement_Update"
            },
            "required": true,
            "in": "body",
            "name": "agreement",
            "description": "The Agreement to be updated",
            "x-example": {
              "application/json": {
                "agreementPeriod": {
                  "endDateTime": "2018-06-08T00:00",
                  "startDateTime": "2019-01-07T00:00"
                },
                "description": "This is a test agreement",
                "documentNumber": 12,
                "initialDate": "2014-12-06",
                "name": "Summer Contract Agreement",
                "statementOfIntent": "Agreement on restricting the working hours",
                "status": "process",
                "type": "commercial",
                "version": "1,5",
                "agreementSpecification": {
                  "description": "This agreement specification defines the environment protection rules to be followed by each party.",
                  "href": "https://host:port/tmf-api/agreementManagement/v2/agreementSpecification/2186",
                  "id": "2186",
                  "name": "Purchase Agreement Specification",
                  "@referredType": "a string..."
                },
                "agreementItem": [
                  {
                    "productOffering": [
                      {
                        "href": "https://host:port/tmf-api/productCatalogManagement/v2/productOffering/1308",
                        "id": "1308",
                        "name": "My Quick BB Offer",
                        "@referredType": "a string..."
                      }
                    ]
                  },
                  {
                    "termOrCondition": {
                      "description": "This agreement term or condition...",
                      "id": "7482",
                      "validFor": {
                        "endDateTime": "2019-01-07T00:00",
                        "startDateTime": "2018-06-07T00:00"
                      },
                      "@type": "a string..."
                    },
                    "@type": "a string..."
                  }
                ],
                "engagedPartyRole": [
                  {
                    "href": "https://host:port/tmf-api/partyRole/v2/partyRole/5057",
                    "id": "5057",
                    "name": "Supplier",
                    "partyId": "786",
                    "partyName": "Zero Bug LTD",
                    "@referredType": "a string..."
                  }
                ],
                "agreementAuthorization": [
                  {
                    "date": "2018-06-11T00:00",
                    "signatureRepresentation": "Dr Mabuse",
                    "state": "rejected",
                    "@type": "a string..."
                  }
                ],
                "characteristic": [
                  {
                    "name": "country",
                    "value": "France",
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  },
                  {
                    "name": "confidentialLevel",
                    "value": "low",
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  }
                ],
                "associatedAgreement": [
                  {
                    "href": "https://host:port/tmf-api/agreementManagement/v2/agreement/3670",
                    "id": "string",
                    "name": "General Partnership Agreement",
                    "@referredType": "string"
                  }
                ],
                "@type": "string",
                "@schemaLocation": "string",
                "@baseType": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": true,
            "x-example": "either \"application/merge-patch+json\" or \"application/json-patch+json\""
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Agreement"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "agreementPeriod": {
                  "endDateTime": "2018-06-08T00:00",
                  "startDateTime": "2019-01-07T00:00"
                },
                "completionDate": {
                  "endDateTime": "2016-10-16",
                  "startDateTime": "2016-10-16"
                },
                "description": "This is a test agreement",
                "documentNumber": 12,
                "href": "https://host:port/tmf-api/agreementManagement/v2/agreement/3582",
                "id": "3582",
                "initialDate": "2014-12-06",
                "name": "Summer Contract Agreement",
                "statementOfIntent": "Agreement on restricting the working hours",
                "status": "process",
                "type": "commercial",
                "version": "1,5",
                "agreementSpecification": {
                  "description": "This agreement specification defines the environment protection rules to be followed by each party.",
                  "href": "https://host:port/tmf-api/agreementManagement/v2/agreementSpecification/2186",
                  "id": "2186",
                  "name": "Purchase Agreement Specification",
                  "@referredType": "a string..."
                },
                "agreementItem": [
                  {
                    "productOffering": [
                      {
                        "href": "https://host:port/tmf-api/productCatalogManagement/v2/productOffering/1308",
                        "id": "1308",
                        "name": "My Quick BB Offer",
                        "@referredType": "a string..."
                      }
                    ]
                  },
                  {
                    "termOrCondition": {
                      "description": "This agreement term or condition...",
                      "id": "7482",
                      "validFor": {
                        "endDateTime": "2019-01-07T00:00",
                        "startDateTime": "2018-06-07T00:00"
                      },
                      "@type": "a string..."
                    },
                    "@type": "a string..."
                  }
                ],
                "engagedPartyRole": [
                  {
                    "href": "https://host:port/tmf-api/partyRole/v2/partyRole/5057",
                    "id": "5057",
                    "name": "Supplier",
                    "partyId": "786",
                    "partyName": "Zero Bug LTD",
                    "@referredType": "a string..."
                  }
                ],
                "agreementAuthorization": [
                  {
                    "date": "2018-06-11T00:00",
                    "signatureRepresentation": "Dr Mabuse",
                    "state": "rejected",
                    "@type": "a string..."
                  }
                ],
                "characteristic": [
                  {
                    "name": "country",
                    "value": "France",
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  },
                  {
                    "name": "confidentialLevel",
                    "value": "low",
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  }
                ],
                "associatedAgreement": [
                  {
                    "href": "https://host:port/tmf-api/agreementManagement/v2/agreement/3670",
                    "id": "string",
                    "name": "General Partnership Agreement",
                    "@referredType": "string"
                  }
                ],
                "@type": "string",
                "@schemaLocation": "string",
                "@baseType": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_AGREEMENT_PATCH"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "deleteAgreement",
        "summary": "Deletes a 'Agreement' by Id",
        "description": "Deletes a 'Agreement' by Id",
        "tags": [
          "agreement"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path",
            "description": "Identifier of the Agreement",
            "x-example": 3582
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_AGREEMENT_DELETE"
            ]
          }
        ]
      }
    },
    "/agreementSpecification": {
      "get": {
        "operationId": "listAgreementSpecification",
        "summary": "List or find 'AgreementSpecification' objects",
        "description": "List or find 'AgreementSpecification' objects",
        "tags": [
          "agreementSpecification"
        ],
        "parameters": [
          {
            "type": "string",
            "required": false,
            "in": "query",
            "name": "fields",
            "description": "Comma separated properties to display in response",
            "x-example": "name"
          },
          {
            "type": "integer",
            "required": false,
            "in": "query",
            "name": "offset",
            "description": "Requested index for start of resources to be provided in response",
            "x-example": 10
          },
          {
            "type": "integer",
            "required": false,
            "in": "query",
            "name": "limit",
            "description": "Requested number of resources to be provided in response",
            "x-example": 10
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "items": {
                "$ref": "#/definitions/AgreementSpecification"
              },
              "type": "array"
            },
            "examples": {
              "application/json": [
                {
                  "description": "This agreement specification defines the ethic rules to be followed by each party.",
                  "href": "https://host:port/tmf-api/agreementManagement/v2/agreementSpecification/6500",
                  "id": "6500",
                  "isBundle": false,
                  "lastUpdate": "2018-06-11T00:00",
                  "lifecycleStatus": "string",
                  "name": "Purchase Agreement Specification",
                  "validFor": {
                    "endDateTime": "2018-06-12T00:00",
                    "startDateTime": "2019-01-07T00:00"
                  },
                  "version": "2.1",
                  "serviceCategory": {
                    "href": "https://host:port/tmf-api/productOffering/v2/category/3380",
                    "id": "3380",
                    "name": "Cloud",
                    "@referredType": "a string..."
                  },
                  "specCharacteristic": [
                    {
                      "configurable": false,
                      "description": "This agreement spec characteristic ...",
                      "name": "Screen color",
                      "validFor": {
                        "endDateTime": "2018-06-08T00:00",
                        "startDateTime": "2019-01-07T00:00"
                      },
                      "valueType": "string",
                      "specCharacteristicValue": [
                        {
                          "default": true,
                          "unitOfMeasure": "Hz",
                          "validFor": {
                            "endDateTime": "2018-06-10T00:00",
                            "startDateTime": "2019-01-07T00:00"
                          },
                          "value": "blue",
                          "valueFrom": "",
                          "valueTo": "",
                          "valueType": "string",
                          "@type": "a string..."
                        }
                      ],
                      "@type": "a string...",
                      "@schemaLocation": "a string..."
                    }
                  ],
                  "relatedParty": [
                    {
                      "href": "https://host:port/tmf-api/partyManagement/v2/organization/3472",
                      "id": "3472",
                      "name": "Richard Cole",
                      "role": "customer",
                      "@referredType": "a string..."
                    }
                  ],
                  "attachment": [
                    {
                      "href": "http://hostname:port/documentManagement/attachment/22",
                      "id": "22",
                      "type": "Photo",
                      "url": "http://yyyyy",
                      "@type": "a string..."
                    }
                  ],
                  "specificationRelationship": [
                    {
                      "href": "https://host:port/tmf-api/agreements/v2/agreementSpecificationRelationship/3383",
                      "id": "3383",
                      "type": "dependency",
                      "validFor": {
                        "endDateTime": "2018-06-09T00:00",
                        "startDateTime": "2019-01-07T00:00"
                      },
                      "@type": "string"
                    }
                  ],
                  "@type": "a string...",
                  "@schemaLocation": "a string...",
                  "@baseType": "a string..."
                }
              ]
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_AGREEMENT_SPECIFICATION_GET"
            ]
          }
        ]
      },
      "post": {
        "operationId": "createAgreementSpecification",
        "summary": "Creates a 'AgreementSpecification'",
        "description": "Creates a 'AgreementSpecification'",
        "tags": [
          "agreementSpecification"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/AgreementSpecification_Create"
            },
            "required": true,
            "in": "body",
            "name": "agreementSpecification",
            "description": "The Agreement Specification to be created",
            "x-examples": {
              "application/json": {
                "description": "This agreement specification defines the ethic rules to be followed by each party.",
                "isBundle": false,
                "lastUpdate": "2018-06-11T00:00",
                "lifecycleStatus": "string",
                "name": "Purchase Agreement Specification",
                "validFor": {
                  "endDateTime": "2018-06-12T00:00",
                  "startDateTime": "2019-01-07T00:00"
                },
                "version": "2.1",
                "serviceCategory": {
                  "href": "https://host:port/tmf-api/productOffering/v2/category/3380",
                  "id": "3380",
                  "name": "Cloud",
                  "@referredType": "a string..."
                },
                "specCharacteristic": [
                  {
                    "configurable": false,
                    "description": "This agreement spec characteristic ...",
                    "name": "Screen color",
                    "validFor": {
                      "endDateTime": "2018-06-08T00:00",
                      "startDateTime": "2019-01-07T00:00"
                    },
                    "valueType": "string",
                    "specCharacteristicValue": [
                      {
                        "default": true,
                        "unitOfMeasure": "Hz",
                        "validFor": {
                          "endDateTime": "2018-06-10T00:00",
                          "startDateTime": "2019-01-07T00:00"
                        },
                        "value": "blue",
                        "valueFrom": "",
                        "valueTo": "",
                        "valueType": "string",
                        "@type": "a string..."
                      }
                    ],
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  }
                ],
                "relatedParty": [
                  {
                    "href": "https://host:port/tmf-api/partyManagement/v2/organization/3472",
                    "id": "3472",
                    "name": "Richard Cole",
                    "role": "customer",
                    "@referredType": "a string..."
                  }
                ],
                "attachment": [
                  {
                    "href": "http://hostname:port/documentManagement/attachment/22",
                    "id": "22",
                    "type": "Photo",
                    "url": "http://yyyyy",
                    "@type": "a string..."
                  }
                ],
                "specificationRelationship": [
                  {
                    "href": "https://host:port/tmf-api/agreements/v2/agreementSpecificationRelationship/3383",
                    "id": "3383",
                    "type": "dependency",
                    "validFor": {
                      "endDateTime": "2018-06-09T00:00",
                      "startDateTime": "2019-01-07T00:00"
                    },
                    "@type": "string"
                  }
                ],
                "@type": "a string...",
                "@schemaLocation": "a string...",
                "@baseType": "a string..."
              }
            }
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": true,
            "x-example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AgreementSpecification"
            },
            "examples": {
              "application/json": {
                "description": "This agreement specification defines the ethic rules to be followed by each party.",
                "href": "https://host:port/tmf-api/agreementManagement/v2/agreementSpecification/6500",
                "id": "6500",
                "isBundle": false,
                "lastUpdate": "2018-06-11T00:00",
                "lifecycleStatus": "string",
                "name": "Purchase Agreement Specification",
                "validFor": {
                  "endDateTime": "2018-06-12T00:00",
                  "startDateTime": "2019-01-07T00:00"
                },
                "version": "2.1",
                "serviceCategory": {
                  "href": "https://host:port/tmf-api/productOffering/v2/category/3380",
                  "id": "3380",
                  "name": "Cloud",
                  "@referredType": "a string..."
                },
                "specCharacteristic": [
                  {
                    "configurable": false,
                    "description": "This agreement spec characteristic ...",
                    "name": "Screen color",
                    "validFor": {
                      "endDateTime": "2018-06-08T00:00",
                      "startDateTime": "2019-01-07T00:00"
                    },
                    "valueType": "string",
                    "specCharacteristicValue": [
                      {
                        "default": true,
                        "unitOfMeasure": "Hz",
                        "validFor": {
                          "endDateTime": "2018-06-10T00:00",
                          "startDateTime": "2019-01-07T00:00"
                        },
                        "value": "blue",
                        "valueFrom": "",
                        "valueTo": "",
                        "valueType": "string",
                        "@type": "a string..."
                      }
                    ],
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  }
                ],
                "relatedParty": [
                  {
                    "href": "https://host:port/tmf-api/partyManagement/v2/organization/3472",
                    "id": "3472",
                    "name": "Richard Cole",
                    "role": "customer",
                    "@referredType": "a string..."
                  }
                ],
                "attachment": [
                  {
                    "href": "http://hostname:port/documentManagement/attachment/22",
                    "id": "22",
                    "type": "Photo",
                    "url": "http://yyyyy",
                    "@type": "a string..."
                  }
                ],
                "specificationRelationship": [
                  {
                    "href": "https://host:port/tmf-api/agreements/v2/agreementSpecificationRelationship/3383",
                    "id": "3383",
                    "type": "dependency",
                    "validFor": {
                      "endDateTime": "2018-06-09T00:00",
                      "startDateTime": "2019-01-07T00:00"
                    },
                    "@type": "string"
                  }
                ],
                "@type": "a string...",
                "@schemaLocation": "a string...",
                "@baseType": "a string..."
              }
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_AGREEMENT_SPECIFICATION_POST"
            ]
          }
        ]
      }
    },
    "/agreementSpecification/{id}": {
      "get": {
        "operationId": "retrieveAgreementSpecification",
        "summary": "Retrieves a 'AgreementSpecification' by Id",
        "description": "Retrieves a 'AgreementSpecification' by Id",
        "tags": [
          "agreementSpecification"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path",
            "description": "Identifier of the Agreement Specification",
            "x-example": 6500
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "items": {
                "$ref": "#/definitions/AgreementSpecification"
              },
              "type": "array"
            },
            "examples": {
              "application/json": {
                "description": "This agreement specification defines the ethic rules to be followed by each party.",
                "href": "https://host:port/tmf-api/agreementManagement/v2/agreementSpecification/6500",
                "id": "6500",
                "isBundle": false,
                "lastUpdate": "2018-06-11T00:00",
                "lifecycleStatus": "string",
                "name": "Purchase Agreement Specification",
                "validFor": {
                  "endDateTime": "2018-06-12T00:00",
                  "startDateTime": "2019-01-07T00:00"
                },
                "version": "2.1",
                "serviceCategory": {
                  "href": "https://host:port/tmf-api/productOffering/v2/category/3380",
                  "id": "3380",
                  "name": "Cloud",
                  "@referredType": "a string..."
                },
                "specCharacteristic": [
                  {
                    "configurable": false,
                    "description": "This agreement spec characteristic ...",
                    "name": "Screen color",
                    "validFor": {
                      "endDateTime": "2018-06-08T00:00",
                      "startDateTime": "2019-01-07T00:00"
                    },
                    "valueType": "string",
                    "specCharacteristicValue": [
                      {
                        "default": true,
                        "unitOfMeasure": "Hz",
                        "validFor": {
                          "endDateTime": "2018-06-10T00:00",
                          "startDateTime": "2019-01-07T00:00"
                        },
                        "value": "blue",
                        "valueFrom": "",
                        "valueTo": "",
                        "valueType": "string",
                        "@type": "a string..."
                      }
                    ],
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  }
                ],
                "relatedParty": [
                  {
                    "href": "https://host:port/tmf-api/partyManagement/v2/organization/3472",
                    "id": "3472",
                    "name": "Richard Cole",
                    "role": "customer",
                    "@referredType": "a string..."
                  }
                ],
                "attachment": [
                  {
                    "href": "http://hostname:port/documentManagement/attachment/22",
                    "id": "22",
                    "type": "Photo",
                    "url": "http://yyyyy",
                    "@type": "a string..."
                  }
                ],
                "specificationRelationship": [
                  {
                    "href": "https://host:port/tmf-api/agreements/v2/agreementSpecificationRelationship/3383",
                    "id": "3383",
                    "type": "dependency",
                    "validFor": {
                      "endDateTime": "2018-06-09T00:00",
                      "startDateTime": "2019-01-07T00:00"
                    },
                    "@type": "string"
                  }
                ],
                "@type": "a string...",
                "@schemaLocation": "a string...",
                "@baseType": "a string..."
              }
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_AGREEMENT_SPECIFICATION_GET"
            ]
          }
        ]
      },
      "patch": {
        "operationId": "patchAgreementSpecification",
        "summary": "Updates partially a 'AgreementSpecification' by Id",
        "description": "Updates partially a 'AgreementSpecification' by Id",
        "tags": [
          "agreementSpecification"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path",
            "description": "Identifier of the Agreement Specification",
            "x-example": 6500
          },
          {
            "schema": {
              "$ref": "#/definitions/AgreementSpecification_Update"
            },
            "required": true,
            "in": "body",
            "name": "agreementSpecification",
            "description": "The Agreement Specification to be updated",
            "x-examples": {
              "application/json": [
                {
                  "description": "This agreement specification defines the ethic rules to be followed by each party.",
                  "isBundle": false,
                  "lastUpdate": "2018-06-11T00:00",
                  "lifecycleStatus": "string",
                  "name": "Purchase Agreement Specification",
                  "validFor": {
                    "endDateTime": "2018-06-12T00:00",
                    "startDateTime": "2019-01-07T00:00"
                  },
                  "version": "2.1",
                  "serviceCategory": {
                    "href": "https://host:port/tmf-api/productOffering/v2/category/3380",
                    "id": "3380",
                    "name": "Cloud",
                    "@referredType": "a string..."
                  },
                  "specCharacteristic": [
                    {
                      "configurable": false,
                      "description": "This agreement spec characteristic ...",
                      "name": "Screen color",
                      "validFor": {
                        "endDateTime": "2018-06-08T00:00",
                        "startDateTime": "2019-01-07T00:00"
                      },
                      "valueType": "string",
                      "specCharacteristicValue": [
                        {
                          "default": true,
                          "unitOfMeasure": "Hz",
                          "validFor": {
                            "endDateTime": "2018-06-10T00:00",
                            "startDateTime": "2019-01-07T00:00"
                          },
                          "value": "blue",
                          "valueFrom": "",
                          "valueTo": "",
                          "valueType": "string",
                          "@type": "a string..."
                        }
                      ],
                      "@type": "a string...",
                      "@schemaLocation": "a string..."
                    }
                  ],
                  "relatedParty": [
                    {
                      "href": "https://host:port/tmf-api/partyManagement/v2/organization/3472",
                      "id": "3472",
                      "name": "Richard Cole",
                      "role": "customer",
                      "@referredType": "a string..."
                    }
                  ],
                  "attachment": [
                    {
                      "href": "http://hostname:port/documentManagement/attachment/22",
                      "id": "22",
                      "type": "Photo",
                      "url": "http://yyyyy",
                      "@type": "a string..."
                    }
                  ],
                  "specificationRelationship": [
                    {
                      "href": "https://host:port/tmf-api/agreements/v2/agreementSpecificationRelationship/3383",
                      "id": "3383",
                      "type": "dependency",
                      "validFor": {
                        "endDateTime": "2018-06-09T00:00",
                        "startDateTime": "2019-01-07T00:00"
                      },
                      "@type": "string"
                    }
                  ],
                  "@type": "a string...",
                  "@schemaLocation": "a string...",
                  "@baseType": "a string..."
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": true,
            "x-example": "either \"application/merge-patch+json\" or \"application/json-patch+json\""
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/AgreementSpecification"
            },
            "examples": {
              "application/json": {
                "description": "This agreement specification defines the ethic rules to be followed by each party.",
                "href": "https://host:port/tmf-api/agreementManagement/v2/agreementSpecification/6500",
                "id": "6500",
                "isBundle": false,
                "lastUpdate": "2018-06-11T00:00",
                "lifecycleStatus": "string",
                "name": "Purchase Agreement Specification",
                "validFor": {
                  "endDateTime": "2018-06-12T00:00",
                  "startDateTime": "2019-01-07T00:00"
                },
                "version": "2.1",
                "serviceCategory": {
                  "href": "https://host:port/tmf-api/productOffering/v2/category/3380",
                  "id": "3380",
                  "name": "Cloud",
                  "@referredType": "a string..."
                },
                "specCharacteristic": [
                  {
                    "configurable": false,
                    "description": "This agreement spec characteristic ...",
                    "name": "Screen color",
                    "validFor": {
                      "endDateTime": "2018-06-08T00:00",
                      "startDateTime": "2019-01-07T00:00"
                    },
                    "valueType": "string",
                    "specCharacteristicValue": [
                      {
                        "default": true,
                        "unitOfMeasure": "Hz",
                        "validFor": {
                          "endDateTime": "2018-06-10T00:00",
                          "startDateTime": "2019-01-07T00:00"
                        },
                        "value": "blue",
                        "valueFrom": "",
                        "valueTo": "",
                        "valueType": "string",
                        "@type": "a string..."
                      }
                    ],
                    "@type": "a string...",
                    "@schemaLocation": "a string..."
                  }
                ],
                "relatedParty": [
                  {
                    "href": "https://host:port/tmf-api/partyManagement/v2/organization/3472",
                    "id": "3472",
                    "name": "Richard Cole",
                    "role": "customer",
                    "@referredType": "a string..."
                  }
                ],
                "attachment": [
                  {
                    "href": "http://hostname:port/documentManagement/attachment/22",
                    "id": "22",
                    "type": "Photo",
                    "url": "http://yyyyy",
                    "@type": "a string..."
                  }
                ],
                "specificationRelationship": [
                  {
                    "href": "https://host:port/tmf-api/agreements/v2/agreementSpecificationRelationship/3383",
                    "id": "3383",
                    "type": "dependency",
                    "validFor": {
                      "endDateTime": "2018-06-09T00:00",
                      "startDateTime": "2019-01-07T00:00"
                    },
                    "@type": "string"
                  }
                ],
                "@type": "a string...",
                "@schemaLocation": "a string...",
                "@baseType": "a string..."
              }
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_AGREEMENT_SPECIFICATION_PATCH"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "deleteAgreementSpecification",
        "summary": "Deletes a 'AgreementSpecification' by Id",
        "description": "Deletes a 'AgreementSpecification' by Id",
        "tags": [
          "agreementSpecification"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path",
            "description": "Identifier of the Agreement Specification",
            "x-example": 6500
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_AGREEMENT_SPECIFICATION_DELETE"
            ]
          }
        ]
      }
    },
    "/hub": {
      "post": {
        "operationId": "registerListener",
        "summary": "Register a listener",
        "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "tags": [
          "events subscription"
        ],
        "parameters": [
          {
            "name": "data",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionInput"
            },
            "required": true,
            "in": "body",
            "description": "Data containing the callback endpoint to deliver the information",
            "x-example": {
              "application/json": {
                "callback": "http://in.listener.com",
                "query": "null"
              }
            }
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": true,
            "x-example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "201": {
            "description": "Subscribed",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            },
            "examples": {
              "application/json": {
                "id": "42",
                "callback": "http://in.listener.com",
                "query": "null"
              }
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_HUB_POST"
            ]
          }
        ]
      }
    },
    "/hub/{id}": {
      "delete": {
        "operationId": "unregisterListener",
        "summary": "Unregister a listener",
        "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "tags": [
          "events subscription"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "The id of the registered listener",
            "x-example": 42
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request Error",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not Allowed",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition which prevented it from fulfilling the request",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "AGREEMENT_MANAGEMENT_ALL",
              "AGREEMENT_MANAGEMENT_HUB_ID_DELETE"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Agreement": {
      "type": "object",
      "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
      "required": [
        "name"
      ],
      "properties": {
        "agreementPeriod": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The time period during which the Agreement is in effect."
        },
        "completionDate": {
          "$ref": "#/definitions/TimePeriod",
          "description": "Date at which the agreement is completed"
        },
        "description": {
          "type": "string",
          "description": "Narrative that explains the agreement and details about the it , such as why the agreement is taking place."
        },
        "documentNumber": {
          "type": "integer",
          "description": "A reference number assigned to an Agreement that follows a prescribed numbering system."
        },
        "href": {
          "type": "string",
          "description": "Unique url identifying the agreement as a resource"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the agreement"
        },
        "initialDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date at which the agreement was initialized"
        },
        "name": {
          "type": "string",
          "description": "A human-readable name for the agreement"
        },
        "statementOfIntent": {
          "type": "string",
          "description": "An overview and goals of the Agreement."
        },
        "status": {
          "type": "string",
          "description": "The current status of the agreement. Typical values are: in process, approved and rejected."
        },
        "type": {
          "type": "string",
          "description": "The type of the agreement. For example \"commercial\"."
        },
        "version": {
          "type": "string",
          "description": "A string identifying the version of the agreement."
        },
        "agreementSpecification": {
          "$ref": "#/definitions/AgreementSpecificationRef"
        },
        "agreementItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementItem"
          },
          "description": "A list of agreement items (AgreementItem [*]). A part of the agreement expressed in terms of a product offering and possibly including specific terms and conditions."
        },
        "engagedPartyRole": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyRoleRef"
          },
          "description": "A list of party role references (PartyRoleRef [*]). A party role represents the part played by a party in a given context."
        },
        "agreementAuthorization": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementAuthorization"
          },
          "description": "A list of agreement authorizations (AgreementAuthorization [*]). A business participant that is responsible for approving the agreement."
        },
        "characteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "description": "A list of characteristics (Characteristic [*]). Describes a given characteristic of an object or entity through a name/value pair."
        },
        "associatedAgreement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementRef"
          },
          "description": "A list of agreement references (AgreementRef [*]). An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A link to the schema describing a resource (for type extension)."
        },
        "@baseType": {
          "type": "string",
          "description": "The base type for use in polymorphic collections"
        }
      }
    },
    "Agreement_Create": {
      "type": "object",
      "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.\nSkipped properties: id,href",
      "required": [
        "name",
        "type",
        "engagedPartyRole",
        "agreementItem"
      ],
      "properties": {
        "agreementPeriod": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The time period during which the Agreement is in effect."
        },
        "completionDate": {
          "$ref": "#/definitions/TimePeriod",
          "description": "Date at which the agreement is completed"
        },
        "description": {
          "type": "string",
          "description": "Narrative that explains the agreement and details about the it , such as why the agreement is taking place."
        },
        "documentNumber": {
          "type": "integer",
          "description": "A reference number assigned to an Agreement that follows a prescribed numbering system."
        },
        "initialDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date at which the agreement was initialized"
        },
        "name": {
          "type": "string",
          "description": "A human-readable name for the agreement"
        },
        "statementOfIntent": {
          "type": "string",
          "description": "An overview and goals of the Agreement."
        },
        "status": {
          "type": "string",
          "description": "The current status of the agreement. Typical values are: in process, approved and rejected."
        },
        "type": {
          "type": "string",
          "description": "The type of the agreement. For example \"commercial\"."
        },
        "version": {
          "type": "string",
          "description": "A string identifying the version of the agreement."
        },
        "agreementSpecification": {
          "$ref": "#/definitions/AgreementSpecificationRef"
        },
        "agreementItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementItem"
          },
          "description": "A list of agreement items (AgreementItem [*]). A part of the agreement expressed in terms of a product offering and possibly including specific terms and conditions."
        },
        "engagedPartyRole": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyRoleRef"
          },
          "description": "A list of party role references (PartyRoleRef [*]). A party role represents the part played by a party in a given context."
        },
        "agreementAuthorization": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementAuthorization"
          },
          "description": "A list of agreement authorizations (AgreementAuthorization [*]). A business participant that is responsible for approving the agreement."
        },
        "characteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "description": "A list of characteristics (Characteristic [*]). Describes a given characteristic of an object or entity through a name/value pair."
        },
        "associatedAgreement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementRef"
          },
          "description": "A list of agreement references (AgreementRef [*]). An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A link to the schema describing a resource (for type extension)."
        },
        "@baseType": {
          "type": "string",
          "description": "The base type for use in polymorphic collections"
        }
      }
    },
    "Agreement_Update": {
      "type": "object",
      "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.\nSkipped properties: id,href,id,href,completionDate",
      "properties": {
        "agreementPeriod": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The time period during which the Agreement is in effect."
        },
        "description": {
          "type": "string",
          "description": "Narrative that explains the agreement and details about the it , such as why the agreement is taking place."
        },
        "documentNumber": {
          "type": "integer",
          "description": "A reference number assigned to an Agreement that follows a prescribed numbering system."
        },
        "initialDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date at which the agreement was initialized"
        },
        "name": {
          "type": "string",
          "description": "A human-readable name for the agreement"
        },
        "statementOfIntent": {
          "type": "string",
          "description": "An overview and goals of the Agreement."
        },
        "status": {
          "type": "string",
          "description": "The current status of the agreement. Typical values are: in process, approved and rejected."
        },
        "type": {
          "type": "string",
          "description": "The type of the agreement. For example \"commercial\"."
        },
        "version": {
          "type": "string",
          "description": "A string identifying the version of the agreement."
        },
        "agreementSpecification": {
          "$ref": "#/definitions/AgreementSpecificationRef"
        },
        "agreementItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementItem"
          },
          "description": "A list of agreement items (AgreementItem [*]). A part of the agreement expressed in terms of a product offering and possibly including specific terms and conditions."
        },
        "engagedPartyRole": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyRoleRef"
          },
          "description": "A list of party role references (PartyRoleRef [*]). A party role represents the part played by a party in a given context."
        },
        "agreementAuthorization": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementAuthorization"
          },
          "description": "A list of agreement authorizations (AgreementAuthorization [*]). A business participant that is responsible for approving the agreement."
        },
        "characteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "description": "A list of characteristics (Characteristic [*]). Describes a given characteristic of an object or entity through a name/value pair."
        },
        "associatedAgreement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementRef"
          },
          "description": "A list of agreement references (AgreementRef [*]). An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A link to the schema describing a resource (for type extension)."
        },
        "@baseType": {
          "type": "string",
          "description": "The base type for use in polymorphic collections"
        }
      }
    },
    "AgreementSpecification": {
      "type": "object",
      "description": "A template of an agreement that can be used when establishing partnerships.",
      "required": [
        "name"
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "A narrative that explains in detail what the agreement specification is about."
        },
        "href": {
          "type": "string",
          "description": "Reference of the agreement specification"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the agreement specification"
        },
        "isBundle": {
          "type": "boolean",
          "description": "Indicates that this agreement specification is a grouping of other agreement specifications. The list of bundled agreement specifications is provided via the specificationRelationship property."
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the last update"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Indicates the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the agreement specification"
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the agreement specification is valid"
        },
        "version": {
          "type": "string",
          "description": "Agreement specification version"
        },
        "serviceCategory": {
          "$ref": "#/definitions/CategoryRef"
        },
        "specCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementSpecCharacteristic"
          },
          "description": "A list of agreement spec characteristics (AgreementSpecCharacteristic [*]). A characteristic quality or distinctive feature of an agreement."
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPartyRef"
          },
          "description": "A list of related party references (RelatedPartyRef [*]). A related party defines party or party role linked to a specific entity."
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementAttachment"
          },
          "description": "A list of agreement attachments (AgreementAttachment [*]). Represents a complementary piece of information to describe the agreement. Could be a document, picture, a video or any kind of multimedia content."
        },
        "specificationRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementSpecificationRelationship"
          },
          "description": "A list of agreement specification relationships (AgreementSpecificationRelationship [*]). A relationship between agreement specifications. Typical relationships are substitution and dependency."
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A link to the schema describing a resource (for type extension)."
        },
        "@baseType": {
          "type": "string",
          "description": "The base type for use in polymorphic collections"
        }
      }
    },
    "AgreementSpecification_Create": {
      "type": "object",
      "description": "A template of an agreement that can be used when establishing partnerships.\nSkipped properties: id,href",
      "required": [
        "name",
        "attachment"
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "A narrative that explains in detail what the agreement specification is about."
        },
        "isBundle": {
          "type": "boolean",
          "description": "Indicates that this agreement specification is a grouping of other agreement specifications. The list of bundled agreement specifications is provided via the specificationRelationship property."
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the last update"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Indicates the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the agreement specification"
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the agreement specification is valid"
        },
        "version": {
          "type": "string",
          "description": "Agreement specification version"
        },
        "serviceCategory": {
          "$ref": "#/definitions/CategoryRef"
        },
        "specCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementSpecCharacteristic"
          },
          "description": "A list of agreement spec characteristics (AgreementSpecCharacteristic [*]). A characteristic quality or distinctive feature of an agreement."
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPartyRef"
          },
          "description": "A list of related party references (RelatedPartyRef [*]). A related party defines party or party role linked to a specific entity."
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementAttachment"
          },
          "description": "A list of agreement attachments (AgreementAttachment [*]). Represents a complementary piece of information to describe the agreement. Could be a document, picture, a video or any kind of multimedia content."
        },
        "specificationRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementSpecificationRelationship"
          },
          "description": "A list of agreement specification relationships (AgreementSpecificationRelationship [*]). A relationship between agreement specifications. Typical relationships are substitution and dependency."
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A link to the schema describing a resource (for type extension)."
        },
        "@baseType": {
          "type": "string",
          "description": "The base type for use in polymorphic collections"
        }
      }
    },
    "AgreementSpecification_Update": {
      "type": "object",
      "description": "A template of an agreement that can be used when establishing partnerships.\nSkipped properties: id,href,id,href",
      "properties": {
        "description": {
          "type": "string",
          "description": "A narrative that explains in detail what the agreement specification is about."
        },
        "isBundle": {
          "type": "boolean",
          "description": "Indicates that this agreement specification is a grouping of other agreement specifications. The list of bundled agreement specifications is provided via the specificationRelationship property."
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the last update"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Indicates the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the agreement specification"
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the agreement specification is valid"
        },
        "version": {
          "type": "string",
          "description": "Agreement specification version"
        },
        "serviceCategory": {
          "$ref": "#/definitions/CategoryRef"
        },
        "specCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementSpecCharacteristic"
          },
          "description": "A list of agreement spec characteristics (AgreementSpecCharacteristic [*]). A characteristic quality or distinctive feature of an agreement."
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPartyRef"
          },
          "description": "A list of related party references (RelatedPartyRef [*]). A related party defines party or party role linked to a specific entity."
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementAttachment"
          },
          "description": "A list of agreement attachments (AgreementAttachment [*]). Represents a complementary piece of information to describe the agreement. Could be a document, picture, a video or any kind of multimedia content."
        },
        "specificationRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementSpecificationRelationship"
          },
          "description": "A list of agreement specification relationships (AgreementSpecificationRelationship [*]). A relationship between agreement specifications. Typical relationships are substitution and dependency."
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A link to the schema describing a resource (for type extension)."
        },
        "@baseType": {
          "type": "string",
          "description": "The base type for use in polymorphic collections"
        }
      }
    },
    "TimePeriod": {
      "type": "object",
      "description": "A base / value business entity used to represent a period of time between two timepoints.",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "An instant of time, ending at the TimePeriod."
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "An instant of time, starting at the TimePeriod"
        }
      }
    },
    "AgreementSpecificationRef": {
      "type": "object",
      "description": "AgreementSpecification reference. An AgreementSpecification represents a template of an agreement that can be used when establishing partnerships.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A narrative that explains in detail what the agreement specification is about."
        },
        "href": {
          "type": "string",
          "description": "Reference URL of the agreement specification"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the agreement specification"
        },
        "name": {
          "type": "string",
          "description": "Name of the agreement specification"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      }
    },
    "AgreementItem": {
      "type": "object",
      "description": "A part of the agreement expressed in terms of a product offering and possibly including specific terms and conditions.",
      "properties": {
        "productOffering": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductOfferingRef"
          },
          "description": "A list of product offering references (ProductOfferingRef [*]). A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
        },
        "termOrCondition": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementTermOrCondition"
          },
          "description": "A list of agreement term or conditions (AgreementTermOrCondition [*]). Aspects of the agreement not formally specified elsewhere in the agreement and that cannot be captured elsewhere in a formal notation, or automatically monitored and require a more human level of management."
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        }
      }
    },
    "PartyRoleRef": {
      "type": "object",
      "description": "Party role reference. A party role represents the part played by a party in a given context.",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference of the product"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the product"
        },
        "name": {
          "type": "string",
          "description": "The name of the referred party role."
        },
        "partyId": {
          "type": "string",
          "description": "The identifier of the engaged party that is linked to the PartyRole object."
        },
        "partyName": {
          "type": "string",
          "description": "The name of the engaged party that is linked to the PartyRole object."
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      }
    },
    "AgreementAuthorization": {
      "type": "object",
      "description": "A business participant that is responsible for approving the agreement.",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date associated with the authorization state."
        },
        "signatureRepresentation": {
          "type": "string",
          "description": "Indication that represents whether the signature is a physical paper signature or a digital signature."
        },
        "state": {
          "type": "string",
          "description": "Current status of the authorization, for example in process, approved, rejected."
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        }
      }
    },
    "Characteristic": {
      "type": "object",
      "description": "Describes a given characteristic of an object or entity through a name/value pair.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the characteristic"
        },
        "value": {
          "type": "string",
          "description": "Value of the characteristic"
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A link to the schema describing a resource (for type extension)."
        }
      }
    },
    "AgreementRef": {
      "type": "object",
      "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
      "required": [
        "id",
        "href"
      ],
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference of the agreement"
        },
        "id": {
          "type": "string",
          "description": "Identifier of the agreement"
        },
        "name": {
          "type": "string",
          "description": "Name of the agreement"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      }
    },
    "ProductOfferingRef": {
      "type": "object",
      "description": "ProductOffering reference. A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information.",
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference of the product offering"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the product offering"
        },
        "name": {
          "type": "string",
          "description": "Name of the product offering"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      }
    },
    "AgreementTermOrCondition": {
      "type": "object",
      "description": "Aspects of the agreement not formally specified elsewhere in the agreement and that cannot be captured elsewhere in a formal notation, or automatically monitored and require a more human level of management.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Text that explains the term or condition of the agreement."
        },
        "id": {
          "type": "string",
          "description": "Unique number assigned for reference."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period of time during which the term or condition of the agreement applies."
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        }
      }
    },
    "CategoryRef": {
      "type": "object",
      "description": "The category for grouping recommendations",
      "properties": {
        "href": {
          "type": "string",
          "description": "Hypertext Reference of the category"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of category"
        },
        "name": {
          "type": "string",
          "description": "Name of the category."
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      }
    },
    "AgreementSpecCharacteristic": {
      "type": "object",
      "description": "A characteristic quality or distinctive feature of an agreement.",
      "properties": {
        "configurable": {
          "type": "boolean",
          "description": "If true, the Boolean indicates that the characteristic is configurable"
        },
        "description": {
          "type": "string",
          "description": "A narrative that explains in detail what the characteristic is"
        },
        "name": {
          "type": "string",
          "description": "Name of the characteristic being specified."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the specification characteristic is valid"
        },
        "valueType": {
          "type": "string",
          "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
        },
        "specCharacteristicValue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementSpecCharacteristicValue"
          },
          "description": "A list of agreement spec characteristic values (AgreementSpecCharacteristicValue [*]). A number or text that can be assigned to an agreement specification characteristic."
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A link to the schema describing a resource (for type extension)."
        }
      }
    },
    "RelatedPartyRef": {
      "type": "object",
      "description": "RelatedParty reference. A related party defines party or party role linked to a specific entity.",
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference of the related party, could be a party reference or a party role reference"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a related party"
        },
        "name": {
          "type": "string",
          "description": "Name of the related party"
        },
        "role": {
          "type": "string",
          "description": "Role of the related party."
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        }
      }
    },
    "AgreementAttachment": {
      "type": "object",
      "description": "Represents a complementary piece of information to describe the agreement. Could be a document, picture, a video or any kind of multimedia content.",
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference of the attachment"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the attachment"
        },
        "type": {
          "type": "string",
          "description": "Attachment type such as video, picture"
        },
        "url": {
          "type": "string",
          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        }
      }
    },
    "AgreementSpecificationRelationship": {
      "type": "object",
      "description": "A relationship between agreement specifications. Typical relationships are substitution and dependency.",
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference of an agreement specification."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the related agreement specification."
        },
        "type": {
          "type": "string",
          "description": "Type of relationship such as, substitution or dependency."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period for which the relationship is valid"
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        }
      }
    },
    "AgreementSpecCharacteristicValue": {
      "type": "object",
      "description": "A number or text that can be assigned to an agreement specification characteristic.",
      "properties": {
        "default": {
          "type": "boolean",
          "description": "Indicates if the value is the default value for a characteristic"
        },
        "unitOfMeasure": {
          "type": "string",
          "description": "Unit of measure for the characteristic, such as minutes, gigabytes (GB) and so on."
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriod",
          "description": "The period of time for which a value is applicable"
        },
        "value": {
          "type": "string",
          "description": "A discrete value that the characteristic can take on"
        },
        "valueFrom": {
          "type": "string",
          "description": "The low range value that a characteristic can take on"
        },
        "valueTo": {
          "type": "string",
          "description": "The upper range value that a characteristic can take on"
        },
        "valueType": {
          "type": "string",
          "description": "A kind of value that the characteristic can take on, such as numeric, text, and so forth"
        },
        "@type": {
          "type": "string",
          "description": "The class type of the actual resource (for type extension)."
        }
      }
    },
    "EventSubscription": {
      "required": [
        "id",
        "callback"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the listener"
        },
        "callback": {
          "type": "string",
          "description": "The callback being registered."
        },
        "query": {
          "type": "string",
          "description": "additional data to be passed"
        }
      }
    },
    "EventSubscriptionInput": {
      "required": [
        "callback"
      ],
      "properties": {
        "callback": {
          "type": "string",
          "description": "The callback being registered."
        },
        "query": {
          "type": "string",
          "description": "additional data to be passed"
        }
      }
    },
    "Error": {
      "required": [
        "code",
        "reason"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "description": "Application related code."
        },
        "reason": {
          "type": "integer",
          "description": "Text that explains the reason for error."
        },
        "message": {
          "type": "string",
          "description": "(optional) Text that provide more details and corrective actions related to the error."
        },
        "status": {
          "type": "integer",
          "description": "(optional) http error code extension like 400-2"
        },
        "referenceError": {
          "type": "string",
          "description": "(optional) A URL to online documentation that provides more information about the error."
        },
        "@type": {
          "type": "string",
          "description": "(optional) The class type of a REST resource."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "(optional) A link to the schema describing a REST resource."
        }
      }
    }
  }
}