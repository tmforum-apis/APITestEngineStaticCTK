{
  "swagger": "2.0",
  "info": {
    "description": "This is Swagger UI environment generated for the TMF Enhancement to Privacy Management API specification",
    "version": "2.0",
    "title": "TMF644 Privacy Management",
    "x-api-proxy-version": 1.1
  },
  "host": "api.developer.com",
  "basePath": "/tmf-api/privacyManagement/v2",
  "x-backend-connection-prod": "TBC",
  "x-backend-connection-preprod": "TBC",
  "x-backend-connection-basepath": "TBC",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "apix_oauth": {
      "type": "oauth2",
      "tokenUrl": "https://api.developer.com/v1/apixoauth2password/oauth2/token",
      "flow": "password",
      "scopes": {
        "TMF_PRIVACY_MANAGEMENT_ALL": "API Consumer is allowed to consume all the operations.",
        "TMF644_PRIVACY_MANAGEMENT_ALL": "API Consumer is allowed to consume all the operations."
      }
    }
  },
  "paths": {
    "/partyPrivacyProfileType": {
      "post": {
        "tags": [
          "partyPrivacyProfileType"
        ],
        "operationId": "partyPrivacyProfileTypeCreate",
        "summary": "create",
        "description": "This operation is used to create a privacy profile type.",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": false,
            "x-example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyProfileType",
            "in": "body",
            "required": true,
            "description": "Object representation of the party privacy profile type to be created",
            "schema": {
              "$ref": "#/definitions/partyPrivacyProfileType"
            },
            "x-example": {
              "version": "1.0",
              "lastUpdate": "2019-05-30T06:08:03.996Z",
              "name": "Customer Mass Market Privacy",
              "description": "This is customer Mass Market Privacy",
              "lifecycleStatus": "string",
              "validFor": {
                "startDateTime": "2019-05-30T06:08:03.996Z",
                "endDateTime": "2019-05-30T06:08:03.996Z"
              },
              "applicableRole": [
                {
                  "role": "customer"
                }
              ],
              "relatedParty": [
                {
                  "id": 1066,
                  "href": "http://serverlocation:port/partyManagement/individual/1066",
                  "role": "Profile Type Admin"
                }
              ],
              "partyPrivacyProfileTypeCharacteristic": [
                {
                  "id": 42,
                  "name": "eMailAddress",
                  "description": "Email address privacy for internal ADMIN purpose",
                  "privacyType": "Internal Purpose",
                  "criticityLevel": "low",
                  "validFor": {
                    "startDateTime": "2019-05-30T06:08:03.996Z",
                    "endDateTime": "2019-05-30T06:08:03.996Z"
                  },
                  "relatedRole": [
                    {
                      "role": "Administrator"
                    }
                  ],
                  "partyPrivacyProfileTypeCharValue": [
                    {
                      "valueType": "string",
                      "default": true,
                      "value": "Authorized",
                      "validityDuration": "Always",
                      "fromValue": "string",
                      "toValue": "string",
                      "rangeInterval": "string"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/partyPrivacyProfileType"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "href": "example.com",
                "id": "string",
                "version": "string",
                "lastUpdate": "2019-10-30T17:19:46.353Z",
                "name": "string",
                "description": "string",
                "lifecycleStatus": "string",
                "validFor": {
                  "startDateTime": "2019-10-30T17:19:46.353Z",
                  "endDateTime": "2019-10-30T17:19:46.353Z"
                },
                "applicableRole": [
                  {
                    "role": "string"
                  }
                ],
                "relatedParty": [
                  {
                    "id": "string",
                    "href": "string",
                    "role": "string"
                  }
                ],
                "partyPrivacyProfileTypeCharacteristic": [
                  {
                    "id": "string",
                    "name": "string",
                    "description": "string",
                    "privacyType": "string",
                    "criticityLevel": "string",
                    "validFor": {
                      "startDateTime": "2019-10-30T17:19:46.353Z",
                      "endDateTime": "2019-10-30T17:19:46.353Z"
                    },
                    "relatedRole": [
                      {
                        "role": "string"
                      }
                    ],
                    "partyPrivacyProfileTypeCharValue": [
                      {
                        "valueType": "string",
                        "default": true,
                        "value": "string",
                        "validityDuration": "string",
                        "fromValue": "string",
                        "toValue": "string",
                        "rangeInterval": "string"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      }
    },
    "/partyPrivacyProfileType/{partyPrivacyProfileTypeId}": {
      "get": {
        "tags": [
          "partyPrivacyProfileType"
        ],
        "operationId": "partyPrivacyProfileTypefindById",
        "summary": "findById",
        "description": "Operation to retrieve privacy profile types in a privacy repository",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyProfileTypeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the party privacy profile type to be retrieved",
            "x-example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/partyPrivacyProfileType"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "href": "example.com",
                "id": "string",
                "version": "string",
                "lastUpdate": "2019-10-30T17:16:05.034Z",
                "name": "string",
                "description": "string",
                "lifecycleStatus": "string",
                "validFor": {
                  "startDateTime": "2019-10-30T17:16:05.034Z",
                  "endDateTime": "2019-10-30T17:16:05.034Z"
                },
                "applicableRole": [
                  {
                    "role": "string"
                  }
                ],
                "relatedParty": [
                  {
                    "id": "string",
                    "href": "string",
                    "role": "string"
                  }
                ],
                "partyPrivacyProfileTypeCharacteristic": [
                  {
                    "id": "string",
                    "name": "string",
                    "description": "string",
                    "privacyType": "string",
                    "criticityLevel": "string",
                    "validFor": {
                      "startDateTime": "2019-10-30T17:16:05.034Z",
                      "endDateTime": "2019-10-30T17:16:05.034Z"
                    },
                    "relatedRole": [
                      {
                        "role": "string"
                      }
                    ],
                    "partyPrivacyProfileTypeCharValue": [
                      {
                        "valueType": "string",
                        "default": true,
                        "value": "string",
                        "validityDuration": "string",
                        "fromValue": "string",
                        "toValue": "string",
                        "rangeInterval": "string"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "partyPrivacyProfileType"
        ],
        "operationId": "partyPrivacyProfileTypePatch",
        "summary": "patch",
        "description": "This Uniform Contract operation is used to partially update the representation of a privacy profile type.",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": false,
            "x-example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyProfileTypeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the party privacy profile type to be patched",
            "x-example": 123
          },
          {
            "name": "partyPrivacyProfileType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/partyPrivacyProfileType"
            },
            "description": "Object representation of the party privacy profile type patch",
            "x-example": {
              "application/json": {
                "href": "example.com",
                "id": "string",
                "version": "string",
                "lastUpdate": "2019-10-30T17:08:28.406Z",
                "name": "string",
                "description": "string",
                "lifecycleStatus": "string",
                "validFor": {
                  "startDateTime": "2019-10-30T17:08:28.406Z",
                  "endDateTime": "2019-10-30T17:08:28.406Z"
                },
                "applicableRole": [
                  {
                    "role": "string"
                  }
                ],
                "relatedParty": [
                  {
                    "id": "string",
                    "href": "string",
                    "role": "string"
                  }
                ],
                "partyPrivacyProfileTypeCharacteristic": [
                  {
                    "id": "string",
                    "name": "string",
                    "description": "string",
                    "privacyType": "string",
                    "criticityLevel": "string",
                    "validFor": {
                      "startDateTime": "2019-10-30T17:08:28.406Z",
                      "endDateTime": "2019-10-30T17:08:28.406Z"
                    },
                    "relatedRole": [
                      {
                        "role": "string"
                      }
                    ],
                    "partyPrivacyProfileTypeCharValue": [
                      {
                        "valueType": "string",
                        "default": true,
                        "value": "string",
                        "validityDuration": "string",
                        "fromValue": "string",
                        "toValue": "string",
                        "rangeInterval": "string"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/partyPrivacyProfileType"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "href": "example.com",
                "id": "string",
                "version": "string",
                "lastUpdate": "2019-10-30T17:12:58.681Z",
                "name": "string",
                "description": "string",
                "lifecycleStatus": "string",
                "validFor": {
                  "startDateTime": "2019-10-30T17:12:58.681Z",
                  "endDateTime": "2019-10-30T17:12:58.681Z"
                },
                "applicableRole": [
                  {
                    "role": "string"
                  }
                ],
                "relatedParty": [
                  {
                    "id": "string",
                    "href": "string",
                    "role": "string"
                  }
                ],
                "partyPrivacyProfileTypeCharacteristic": [
                  {
                    "id": "string",
                    "name": "string",
                    "description": "string",
                    "privacyType": "string",
                    "criticityLevel": "string",
                    "validFor": {
                      "startDateTime": "2019-10-30T17:12:58.681Z",
                      "endDateTime": "2019-10-30T17:12:58.681Z"
                    },
                    "relatedRole": [
                      {
                        "role": "string"
                      }
                    ],
                    "partyPrivacyProfileTypeCharValue": [
                      {
                        "valueType": "string",
                        "default": true,
                        "value": "string",
                        "validityDuration": "string",
                        "fromValue": "string",
                        "toValue": "string",
                        "rangeInterval": "string"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "partyPrivacyProfileType"
        ],
        "operationId": "partyPrivacyProfileTypeDelete",
        "summary": "delete",
        "description": "Delete a party privacy profile type. Only useful and allowed for administration matters",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyProfileTypeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the party privacy profile type to be deleted",
            "x-example": 12
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      }
    },
    "/partyPrivacyAgreement": {
      "post": {
        "tags": [
          "partyPrivacyAgreement"
        ],
        "operationId": "partyPrivacyAgreementCreate",
        "summary": "create",
        "description": "This operation is used to create a privacy agreement.",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": false,
            "x-example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyAgreement",
            "description": "The actual content of the party privacy agreement to be created",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/partyPrivacyAgreement"
            },
            "x-example": {
              "application/json": {
                "agreementPeriod": {
                  "startDateTime": "2019-05-08T05:22:18.305Z",
                  "endDateTime": "2019-05-08T05:22:18.305Z"
                },
                "completionDate": "2019-06-20",
                "description": "This agreement",
                "documentNumber": 13,
                "initialDate": "2019-05-08T05:22:18.305Z",
                "name": "Customer mass market privacy agreement",
                "statementOfIntent": "Agreement on customer mass market privacy profile",
                "status": "validated",
                "type": "commercial",
                "version": "1",
                "agreementSpecification": {
                  "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreementSpecification/8139",
                  "id": "8139",
                  "description": "This agreement specification defines the rules of privacy to be followed by each party",
                  "name": "General Agreement Specification"
                },
                "agreementItem": [
                  {
                    "productOffering": [
                      {
                        "href": "http://serverlocation:port/productOffering/9559",
                        "id": "9559",
                        "description": "string",
                        "name": "Privacy service",
                        "partyId": "string",
                        "partyName": "string",
                        "bundledProductOffering": [
                          {
                            "href": "http://serverlocation:port/productOffering/bundledProductOffering/7120",
                            "id": "7120",
                            "name": "Magic Offer",
                            "bundledProductOffering": []
                          }
                        ]
                      }
                    ],
                    "termOrCondition": [
                      {
                        "description": "This agreement terms or condition",
                        "id": "8905",
                        "validFor": {
                          "startDateTime": "2019-05-08T05:22:18.305Z",
                          "endDateTime": "2019-05-08T05:22:18.305Z"
                        }
                      }
                    ]
                  }
                ],
                "engagedPartyRole": [
                  {
                    "href": "http://serverlocation:port/partyManagement/partyRole/1",
                    "id": "1",
                    "name": "Customer",
                    "partyId": "2345",
                    "partyName": "John Doe"
                  }
                ],
                "agreementAuthorization": [
                  {
                    "date": "2019-05-08T05:22:18.306Z",
                    "signatureRepresentation": "Digital",
                    "state": "approved"
                  }
                ],
                "characteristic": [
                  {
                    "name": "country",
                    "value": "France"
                  }
                ],
                "associatedAgreement": [
                  {
                    "id": "987654",
                    "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreement/987654",
                    "name": "General Privacy Agreement"
                  }
                ],
                "partyPrivacyProfile": [
                  {
                    "id": "394",
                    "href": "http://serverlocation:port/privacyManagement/partyPrivacyProfile/394",
                    "name": "privacy profile1"
                  }
                ],
                "partyPrivacyProfileCharValue": [
                  {
                    "privacyUsagePurpose": "MARKETING",
                    "name": "eMailAddress",
                    "value": "Authorized",
                    "validFor": {
                      "startDateTime": "2019-05-08T05:22:18.306Z",
                      "endDateTime": "2019-05-08T05:22:18.306Z"
                    },
                    "relatedParty": [
                      {
                        "id": "11",
                        "href": "http://serverlocation:port/partyManagement/partyRole/11",
                        "role": "Vendor",
                        "name": "Alice"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/partyPrivacyAgreement"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "agreementPeriod": {
                  "startDateTime": "2019-05-08T05:22:18.305Z",
                  "endDateTime": "2019-05-08T05:22:18.305Z"
                },
                "completionDate": "2019-06-20",
                "description": "This agreement",
                "documentNumber": 13,
                "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreement/6810",
                "id": "6810",
                "initialDate": "2019-05-08T05:22:18.305Z",
                "name": "Customer mass market privacy agreement",
                "statementOfIntent": "Agreement on customer mass market privacy profile",
                "status": "validated",
                "type": "commercial",
                "version": "1",
                "agreementSpecification": {
                  "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreementSpecification/8139",
                  "id": "8139",
                  "description": "This agreement specification defines the rules of privacy to be followed by each party",
                  "name": "General Agreement Specification"
                },
                "agreementItem": [
                  {
                    "productOffering": [
                      {
                        "href": "http://serverlocation:port/productOffering/9559",
                        "id": "9559",
                        "description": "string",
                        "name": "Privacy service",
                        "partyId": "string",
                        "partyName": "string",
                        "bundledProductOffering": [
                          {
                            "href": "http://serverlocation:port/productOffering/bundledProductOffering/7120",
                            "id": "7120",
                            "name": "Magic Offer",
                            "bundledProductOffering": []
                          }
                        ]
                      }
                    ],
                    "termOrCondition": [
                      {
                        "description": "This agreement terms or condition",
                        "id": "8905",
                        "validFor": {
                          "startDateTime": "2019-05-08T05:22:18.305Z",
                          "endDateTime": "2019-05-08T05:22:18.305Z"
                        }
                      }
                    ]
                  }
                ],
                "engagedPartyRole": [
                  {
                    "href": "http://serverlocation:port/partyManagement/partyRole/1",
                    "id": "1",
                    "name": "Customer",
                    "partyId": "2345",
                    "partyName": "John Doe"
                  }
                ],
                "agreementAuthorization": [
                  {
                    "date": "2019-05-08T05:22:18.306Z",
                    "signatureRepresentation": "Digital",
                    "state": "approved"
                  }
                ],
                "characteristic": [
                  {
                    "name": "country",
                    "value": "France"
                  }
                ],
                "associatedAgreement": [
                  {
                    "id": "987654",
                    "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreement/987654",
                    "name": "General Privacy Agreement"
                  }
                ],
                "partyPrivacyProfile": [
                  {
                    "id": "394",
                    "href": "http://serverlocation:port/privacyManagement/partyPrivacyProfile/394",
                    "name": "privacy profile1"
                  }
                ],
                "partyPrivacyProfileCharValue": [
                  {
                    "privacyUsagePurpose": "MARKETING",
                    "name": "eMailAddress",
                    "value": "Authorized",
                    "validFor": {
                      "startDateTime": "2019-05-08T05:22:18.306Z",
                      "endDateTime": "2019-05-08T05:22:18.306Z"
                    },
                    "relatedParty": [
                      {
                        "id": "11",
                        "href": "http://serverlocation:port/partyManagement/partyRole/11",
                        "role": "Vendor",
                        "name": "Alice"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      }
    },
    "/partyPrivacyAgreement/{partyPrivacyAgreementId}": {
      "get": {
        "tags": [
          "partyPrivacyAgreement"
        ],
        "operationId": "partyPrivacyAgreementfindById",
        "summary": "findById",
        "description": "This operation returns a party privacy agreement by ID",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyAgreementId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the party privacy agreement to be returned",
            "x-example": "12"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/partyPrivacyAgreement"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "agreementPeriod": {
                  "startDateTime": "2019-05-08T05:22:18.305Z",
                  "endDateTime": "2019-05-08T05:22:18.305Z"
                },
                "completionDate": "2019-06-20",
                "description": "This agreement",
                "documentNumber": 13,
                "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreement/6810",
                "id": "6810",
                "initialDate": "2019-05-08T05:22:18.305Z",
                "name": "Customer mass market privacy agreement",
                "statementOfIntent": "Agreement on customer mass market privacy profile",
                "status": "validated",
                "type": "commercial",
                "version": "1",
                "agreementSpecification": {
                  "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreementSpecification/8139",
                  "id": "8139",
                  "description": "This agreement specification defines the rules of privacy to be followed by each party",
                  "name": "General Agreement Specification"
                },
                "agreementItem": [
                  {
                    "productOffering": [
                      {
                        "href": "http://serverlocation:port/productOffering/9559",
                        "id": "9559",
                        "description": "string",
                        "name": "Privacy service",
                        "partyId": "string",
                        "partyName": "string",
                        "bundledProductOffering": [
                          {
                            "href": "http://serverlocation:port/productOffering/bundledProductOffering/7120",
                            "id": "7120",
                            "name": "Magic Offer",
                            "bundledProductOffering": []
                          }
                        ]
                      }
                    ],
                    "termOrCondition": [
                      {
                        "description": "This agreement terms or condition",
                        "id": "8905",
                        "validFor": {
                          "startDateTime": "2019-05-08T05:22:18.305Z",
                          "endDateTime": "2019-05-08T05:22:18.305Z"
                        }
                      }
                    ]
                  }
                ],
                "engagedPartyRole": [
                  {
                    "href": "http://serverlocation:port/partyManagement/partyRole/1",
                    "id": "1",
                    "name": "Customer",
                    "partyId": "2345",
                    "partyName": "John Doe"
                  }
                ],
                "agreementAuthorization": [
                  {
                    "date": "2019-05-08T05:22:18.306Z",
                    "signatureRepresentation": "Digital",
                    "state": "approved"
                  }
                ],
                "characteristic": [
                  {
                    "name": "country",
                    "value": "France"
                  }
                ],
                "associatedAgreement": [
                  {
                    "id": "987654",
                    "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreement/987654",
                    "name": "General Privacy Agreement"
                  }
                ],
                "partyPrivacyProfile": [
                  {
                    "id": "394",
                    "href": "http://serverlocation:port/privacyManagement/partyPrivacyProfile/394",
                    "name": "privacy profile1"
                  }
                ],
                "partyPrivacyProfileCharValue": [
                  {
                    "privacyUsagePurpose": "MARKETING",
                    "name": "eMailAddress",
                    "value": "Authorized",
                    "validFor": {
                      "startDateTime": "2019-05-08T05:22:18.306Z",
                      "endDateTime": "2019-05-08T05:22:18.306Z"
                    },
                    "relatedParty": [
                      {
                        "id": "11",
                        "href": "http://serverlocation:port/partyManagement/partyRole/11",
                        "role": "Vendor",
                        "name": "Alice"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "partyPrivacyAgreement"
        ],
        "operationId": "partyPrivacyAgreementPatch",
        "summary": "patch",
        "description": "This Uniform Contract operation is used to partially update the representation of a privacy agreement.",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": false,
            "x-example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyAgreementId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "This Uniform Contract operation is used to partially update the representation of a privacy agreement.",
            "x-example": 12
          },
          {
            "name": "partyPrivacyAgreement",
            "in": "body",
            "required": true,
            "description": "Actual changes to the party privacy agreement",
            "schema": {
              "$ref": "#/definitions/partyPrivacyAgreement"
            },
            "x-example": {
              "description": "Updated agreement",
              "documentNumber": 14,
              "name": "Customer mass market privacy agreement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/partyPrivacyAgreement"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "agreementPeriod": {
                  "startDateTime": "2019-05-08T05:22:18.305Z",
                  "endDateTime": "2019-05-08T05:22:18.305Z"
                },
                "completionDate": "2019-06-20",
                "description": "updated agreement",
                "documentNumber": 14,
                "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreement/6810",
                "id": "6810",
                "initialDate": "2019-05-08T05:22:18.305Z",
                "name": "Customer mass market privacy agreement",
                "statementOfIntent": "Agreement on customer mass market privacy profile",
                "status": "validated",
                "type": "commercial",
                "version": "1",
                "agreementSpecification": {
                  "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreementSpecification/8139",
                  "id": "8139",
                  "description": "This agreement specification defines the rules of privacy to be followed by each party",
                  "name": "General Agreement Specification"
                },
                "agreementItem": [
                  {
                    "productOffering": [
                      {
                        "href": "http://serverlocation:port/productOffering/9559",
                        "id": "9559",
                        "description": "string",
                        "name": "Privacy service",
                        "partyId": "string",
                        "partyName": "string",
                        "bundledProductOffering": [
                          {
                            "href": "http://serverlocation:port/productOffering/bundledProductOffering/7120",
                            "id": "7120",
                            "name": "Magic Offer",
                            "bundledProductOffering": []
                          }
                        ]
                      }
                    ],
                    "termOrCondition": [
                      {
                        "description": "This agreement terms or condition",
                        "id": "8905",
                        "validFor": {
                          "startDateTime": "2019-05-08T05:22:18.305Z",
                          "endDateTime": "2019-05-08T05:22:18.305Z"
                        }
                      }
                    ]
                  }
                ],
                "engagedPartyRole": [
                  {
                    "href": "http://serverlocation:port/partyManagement/partyRole/1",
                    "id": "1",
                    "name": "Customer",
                    "partyId": "2345",
                    "partyName": "John Doe"
                  }
                ],
                "agreementAuthorization": [
                  {
                    "date": "2019-05-08T05:22:18.306Z",
                    "signatureRepresentation": "Digital",
                    "state": "approved"
                  }
                ],
                "characteristic": [
                  {
                    "name": "country",
                    "value": "France"
                  }
                ],
                "associatedAgreement": [
                  {
                    "id": "987654",
                    "href": "http://serverlocation:port/privacyManagement/partyPrivacyAgreement/987654",
                    "name": "General Privacy Agreement"
                  }
                ],
                "partyPrivacyProfile": [
                  {
                    "id": "394",
                    "href": "http://serverlocation:port/privacyManagement/partyPrivacyProfile/394",
                    "name": "privacy profile1"
                  }
                ],
                "partyPrivacyProfileCharValue": [
                  {
                    "privacyUsagePurpose": "MARKETING",
                    "name": "eMailAddress",
                    "value": "Authorized",
                    "validFor": {
                      "startDateTime": "2019-05-08T05:22:18.306Z",
                      "endDateTime": "2019-05-08T05:22:18.306Z"
                    },
                    "relatedParty": [
                      {
                        "id": "11",
                        "href": "http://serverlocation:port/partyManagement/partyRole/11",
                        "role": "Vendor",
                        "name": "Alice"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "partyPrivacyAgreement"
        ],
        "operationId": "partyPrivacyAgreementDelete",
        "summary": "delete",
        "description": "Delete a party privacy agreement",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyAgreementId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the party privacy agreement to be deleted",
            "x-example": "12"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      }
    },
    "/partyPrivacyProfile": {
      "post": {
        "tags": [
          "partyPrivacyProfile"
        ],
        "operationId": "partyPrivacyProfileCreate",
        "summary": "create",
        "description": "This operation is used to create a privacy profile.",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": false,
            "x-example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyProfile",
            "in": "body",
            "required": true,
            "description": "Object representation of the privacy profile to be created",
            "schema": {
              "$ref": "#/definitions/partyPrivacyProfile"
            },
            "x-example": {
              "application/json": {
                "name": "John Doe's Privacy Profile",
                "description": "This is John Does Privacy profile",
                "dateCreated": "2019-02-12T14:35:27.852Z",
                "status": "agreed",
                "validFor": {
                  "startDateTime": "2019-02-12T14:35:27.852Z",
                  "endDateTime": ""
                },
                "agreedByParty": {
                  "id": "2345",
                  "href": "https://apixHost/tmf-api/partyManagement/v1/individual/2345",
                  "role": "Customer",
                  "name": "John Doe"
                },
                "partyPrivacyProfileType": {
                  "id": "103",
                  "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyProfileType/103"
                },
                "partyPrivacyProfileCharValue": [
                  {
                    "privacyUsagePurpose": "ADMIN",
                    "name": "eMailAddress",
                    "value": "Authorized",
                    "validFor": {
                      "startDateTime": "2019-02-12T14:35:27.852Z",
                      "endDateTime": ""
                    },
                    "relatedParty": [
                      {
                        "id": "10",
                        "href": "https://apixHost/tmf-api/partyManagement/v1/organization/10",
                        "role": "admin"
                      }
                    ]
                  }
                ],
                "agreement": {
                  "id": "6810",
                  "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyAgreement/6810",
                  "type": "commercial"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/partyPrivacyProfile"
            },
            "examples": {
              "application/json": {
                "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyProfile/394",
                "id": "394",
                "name": "John Doe's Privacy Profile",
                "description": "This is John Does Privacy profile",
                "dateCreated": "2019-02-12T14:35:27.852Z",
                "status": "agreed",
                "validFor": {
                  "startDateTime": "2019-02-12T14:35:27.852Z",
                  "endDateTime": ""
                },
                "agreedByParty": {
                  "id": "2345",
                  "href": "https://apixHost/tmf-api/partyManagement/v1/individual/2345",
                  "role": "Customer",
                  "name": "John Doe"
                },
                "partyPrivacyProfileType": {
                  "id": "103",
                  "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyProfileType/103"
                },
                "partyPrivacyProfileCharValue": [
                  {
                    "privacyUsagePurpose": "ADMIN",
                    "name": "eMailAddress",
                    "value": "Authorized",
                    "validFor": {
                      "startDateTime": "2019-02-12T14:35:27.852Z",
                      "endDateTime": ""
                    },
                    "relatedParty": [
                      {
                        "id": "10",
                        "href": "https://apixHost/tmf-api/partyManagement/v1/organization/10",
                        "role": "admin"
                      }
                    ]
                  }
                ],
                "agreement": {
                  "id": "6810",
                  "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyAgreement/6810",
                  "type": "commercial"
                }
              }
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "partyPrivacyProfile"
        ],
        "operationId": "partyPrivacyProfileSearch",
        "summary": "search",
        "description": "This operation returns an array of privacy profiles",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/partyPrivacyProfile"
              }
            },
            "examples": {
              "application/json": [
                {
                  "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyProfile/394",
                  "id": "394",
                  "name": "John Doe's Privacy Profile",
                  "description": "This is John Does Privacy profile",
                  "dateCreated": "2019-02-12T14:35:27.852Z",
                  "status": "agreed",
                  "validFor": {
                    "startDateTime": "2019-02-12T14:35:27.852Z",
                    "endDateTime": ""
                  },
                  "agreedByParty": {
                    "id": "2345",
                    "href": "https://apixHost/tmf-api/partyManagement/v1/individual/2345",
                    "role": "Customer",
                    "name": "John Doe"
                  },
                  "partyPrivacyProfileType": {
                    "id": "103",
                    "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyProfileType/103"
                  },
                  "partyPrivacyProfileCharValue": [
                    {
                      "privacyUsagePurpose": "ADMIN",
                      "name": "eMailAddress",
                      "value": "Authorized",
                      "validFor": {
                        "startDateTime": "2019-02-12T14:35:27.852Z",
                        "endDateTime": ""
                      },
                      "relatedParty": [
                        {
                          "id": "10",
                          "href": "https://apixHost/tmf-api/partyManagement/v1/organization/10",
                          "role": "admin"
                        }
                      ]
                    }
                  ],
                  "agreement": {
                    "id": "6810",
                    "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyAgreement/6810",
                    "type": "commercial"
                  }
                }
              ]
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      }
    },
    "/partyPrivacyProfile/{partyPrivacyProfileId}": {
      "get": {
        "tags": [
          "partyPrivacyProfile"
        ],
        "operationId": "partyPrivacyProfilefindById",
        "summary": "findById",
        "description": "This operation returns a privacy profile",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyProfileId",
            "description": "ID of the privacy profile to be returned",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "12"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/partyPrivacyProfile"
            },
            "examples": {
              "application/json": {
                "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyProfile/394",
                "id": "394",
                "name": "John Doe's Privacy Profile",
                "description": "This is John Does Privacy profile",
                "dateCreated": "2019-02-12T14:35:27.852Z",
                "status": "agreed",
                "validFor": {
                  "startDateTime": "2019-02-12T14:35:27.852Z",
                  "endDateTime": ""
                },
                "agreedByParty": {
                  "id": "2345",
                  "href": "https://apixHost/tmf-api/partyManagement/v1/individual/2345",
                  "role": "Customer",
                  "name": "John Doe"
                },
                "partyPrivacyProfileType": {
                  "id": "103",
                  "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyProfileType/103"
                },
                "partyPrivacyProfileCharValue": [
                  {
                    "privacyUsagePurpose": "ADMIN",
                    "name": "eMailAddress",
                    "value": "Authorized",
                    "validFor": {
                      "startDateTime": "2019-02-12T14:35:27.852Z",
                      "endDateTime": ""
                    },
                    "relatedParty": [
                      {
                        "id": "10",
                        "href": "https://apixHost/tmf-api/partyManagement/v1/organization/10",
                        "role": "admin"
                      }
                    ]
                  }
                ],
                "agreement": {
                  "id": "6810",
                  "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyAgreement/6810",
                  "type": "commercial"
                }
              }
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "partyPrivacyProfile"
        ],
        "operationId": "partyPrivacyProfilePatch",
        "summary": "patch",
        "description": "This operation partially updates a privacy profile",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": false,
            "x-example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyProfileId",
            "description": "ID of the privacy profile to be updated",
            "in": "path",
            "required": true,
            "type": "string",
            "x-example": "12"
          },
          {
            "name": "partyPrivacyProfile",
            "in": "body",
            "required": true,
            "description": "Actual changes to the provascy profile",
            "schema": {
              "$ref": "#/definitions/partyPrivacyProfile"
            },
            "x-example": {
              "application/json": {
                "description": "This is John Does Privacy profile updated"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/partyPrivacyProfile"
            },
            "examples": {
              "application/json": {
                "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyProfile/394",
                "id": "394",
                "name": "John Doe's Privacy Profile",
                "description": "This is John Does Privacy profile updated",
                "dateCreated": "2019-02-12T14:35:27.852Z",
                "status": "agreed",
                "validFor": {
                  "startDateTime": "2019-02-12T14:35:27.852Z",
                  "endDateTime": ""
                },
                "agreedByParty": {
                  "id": "2345",
                  "href": "https://apixHost/tmf-api/partyManagement/v1/individual/2345",
                  "role": "Customer",
                  "name": "John Doe"
                },
                "partyPrivacyProfileType": {
                  "id": "103",
                  "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyProfileType/103"
                },
                "partyPrivacyProfileCharValue": [
                  {
                    "privacyUsagePurpose": "ADMIN",
                    "name": "eMailAddress",
                    "value": "Authorized",
                    "validFor": {
                      "startDateTime": "2019-02-12T14:35:27.852Z",
                      "endDateTime": ""
                    },
                    "relatedParty": [
                      {
                        "id": "10",
                        "href": "https://apixHost/tmf-api/partyManagement/v1/organization/10",
                        "role": "admin"
                      }
                    ]
                  }
                ],
                "agreement": {
                  "id": "6810",
                  "href": "https://apixHost/tmf-api/privacyManagement/v2/partyPrivacyAgreement/6810",
                  "type": "commercial"
                }
              }
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "partyPrivacyProfile"
        ],
        "operationId": "partyPrivacyProfileDelete",
        "summary": "delete",
        "description": "Used to delete a party privacy profile",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "partyPrivacyProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the privacy profile to be deleted",
            "x-example": "12"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "TMF_PRIVACY_MANAGEMENT_ALL",
              "TMF644_PRIVACY_MANAGEMENT_ALL"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "partyPrivacyProfileTypeCharacteristic": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "privacyType",
        "criticityLevel",
        "validFor",
        "relatedRole",
        "partyPrivacyProfileTypeCharValue"
      ],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "Index of the profile type characteristic in the list"
        },
        "name": {
          "type": "string",
          "description": "Name of the characteristic (makes the link with the characteristic specification)"
        },
        "description": {
          "type": "string",
          "description": "Description of the profile type characteristic"
        },
        "privacyType": {
          "type": "string",
          "description": "Type of privacy (e.g. Internal Purpose, External Purpose, Internal Retention, External Retention)"
        },
        "criticityLevel": {
          "type": "string",
          "description": "Level of criticality for the set of personal identifiable information"
        },
        "validFor": {
          "$ref": "#/definitions/validFor",
          "description": "The period for which the profile type characteristic is valid"
        },
        "relatedRole": {
          "type": "array",
          "title": "applicableRole",
          "description": "Name of the roles for which the profile type characteristic is defined",
          "items": {
            "type": "object",
            "required": [
              "role"
            ],
            "additionalProperties": false,
            "properties": {
              "role": {
                "type": "string"
              }
            }
          }
        },
        "partyPrivacyProfileTypeCharValue": {
          "type": "array",
          "description": "Possible privacy rules for the characteristic",
          "title": "partyPrivacyProfileTypeCharValue",
          "items": {
            "type": "object",
            "required": [
              "valueType",
              "default",
              "value",
              "validityDuration"
            ],
            "additionalProperties": false,
            "properties": {
              "valueType": {
                "type": "string"
              },
              "default": {
                "type": "boolean"
              },
              "value": {
                "type": "string"
              },
              "validityDuration": {
                "type": "string"
              },
              "fromValue": {
                "type": "string"
              },
              "toValue": {
                "type": "string"
              },
              "rangeInterval": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "partyPrivacyProfileType": {
      "description": "JSON Schema for partyPrivacyProfileType",
      "type": "object",
      "required": [
        "href",
        "id",
        "version",
        "lastUpdate",
        "name",
        "applicableRole",
        "description",
        "lifecycleStatus",
        "validFor",
        "relatedParty",
        "partyPrivacyProfileTypeCharacteristic"
      ],
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string",
          "format": "hostname",
          "description": "Reference URL of the privacy profile type"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the privacy profile type"
        },
        "version": {
          "type": "string",
          "description": "Privacy profile type version"
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the last update"
        },
        "name": {
          "type": "string",
          "description": "Name of the privacy profile type"
        },
        "description": {
          "type": "string",
          "description": "Description of the privacy profile type"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Used to indicate the current lifecycle status (In Design, Active, Rejected, Retired)"
        },
        "validFor": {
          "description": "The period for which the privacy profile type is valid",
          "$ref": "#/definitions/validFor"
        },
        "applicableRole": {
          "type": "array",
          "title": "applicableRole",
          "description": "Name of the roles for which the privacy profile type is defined",
          "items": {
            "type": "object",
            "required": [
              "role"
            ],
            "additionalProperties": false,
            "properties": {
              "role": {
                "type": "string"
              }
            }
          }
        },
        "relatedParty": {
          "type": "array",
          "description": "List of the related party",
          "title": "relatedParty",
          "items": {
            "type": "object",
            "required": [
              "id",
              "href",
              "role"
            ],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "role": {
                "type": "string"
              }
            }
          }
        },
        "partyPrivacyProfileTypeCharacteristic": {
          "type": "array",
          "title": "partyPrivacyProfileTypeCharacteristic",
          "description": "List of privacy profile typer characteristics",
          "items": {
            "$ref": "#/definitions/partyPrivacyProfileTypeCharacteristic"
          }
        }
      }
    },
    "engagedPartyRoleArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/engagedPartyRole"
      }
    },
    "productOfferingArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/productOffering"
      }
    },
    "hRefTypeArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/hRefType"
      }
    },
    "hRefType": {
      "type": "object",
      "required": [
        "id",
        "href"
      ],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the referenced entity"
        },
        "href": {
          "type": "string",
          "description": "Location of the referenced entity"
        },
        "name": {
          "type": "string",
          "description": "Name of the referenced entity"
        }
      }
    },
    "termOrCondition": {
      "type": "object",
      "required": [
        "description",
        "id",
        "validFor"
      ],
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string",
          "description": "Description"
        },
        "id": {
          "type": "string",
          "description": "ID"
        },
        "validFor": {
          "$ref": "#/definitions/validFor",
          "description": "Validity period"
        }
      }
    },
    "agreementItem": {
      "type": "object",
      "required": [
        "productOffering",
        "termOrCondition"
      ],
      "additionalProperties": false,
      "properties": {
        "productOffering": {
          "$ref": "#/definitions/productOfferingArray",
          "description": "List of product offering"
        },
        "termOrCondition": {
          "type": "array",
          "title": "termOrCondition",
          "description": "List of terms or conditions",
          "items": {
            "$ref": "#/definitions/termOrCondition"
          }
        }
      }
    },
    "engagedPartyRole": {
      "title": "engagedPartyRole",
      "type": "object",
      "required": [
        "href"
      ],
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference URL of the referred party role"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of referred party role"
        },
        "name": {
          "type": "string",
          "description": "The name of the referred party role"
        },
        "partyId": {
          "type": "string",
          "description": "The identifier of the engaged party that is linked to the PartyRole object"
        },
        "partyName": {
          "type": "string",
          "description": "The name of the engaged party that is linked to the PartyRole object"
        }
      }
    },
    "productOffering": {
      "title": "productOffering",
      "type": "object",
      "required": [
        "href"
      ],
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference URL of the referred product offering"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of referred product offering"
        },
        "description": {
          "type": "string",
          "description": "The description of the product offering"
        },
        "name": {
          "type": "string",
          "description": "The name of the product offering"
        },
        "partyId": {
          "type": "string",
          "description": "The identifier of the engaged party that is linked to the product offering object"
        },
        "partyName": {
          "type": "string",
          "description": "The name of the engaged party that is linked to the product offering object"
        },
        "bundledProductOffering": {
          "$ref": "#/definitions/productOfferingArray",
          "description": "List of product offerings"
        }
      }
    },
    "agreementSpecificationType": {
      "title": "agreementSpecificationType",
      "type": "object",
      "required": [
        "href"
      ],
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference to the agreement specification type"
        },
        "id": {
          "type": "string",
          "description": "ID of the agreement specification"
        },
        "description": {
          "type": "string",
          "description": "Description of the agreement dspecification"
        },
        "name": {
          "type": "string",
          "description": "Name of the agreement specification"
        }
      }
    },
    "CharValue": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Char value name"
        },
        "value": {
          "type": "string",
          "description": "Char value value"
        }
      }
    },
    "partyPrivacyProfileCharValue": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "additionalProperties": false,
      "properties": {
        "privacyUsagePurpose": {
          "type": "string",
          "description": "Defines the “Purpose” authorized or refused for the characteristic (e.g. ADMIN, INFORMATION, MARKETING, RESEARCH, ...)"
        },
        "name": {
          "type": "string",
          "description": "Name of the characteristic (makes the link with the characteristic specification)"
        },
        "value": {
          "type": "string",
          "description": "Value"
        },
        "validFor": {
          "$ref": "#/definitions/validFor",
          "description": "The period for which the profile type characteristic is valid"
        },
        "relatedParty": {
          "description": "List of related parties",
          "type": "array",
          "title": "relatedParty",
          "items": {
            "type": "object",
            "required": [
              "id",
              "href",
              "role"
            ],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "role": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "validFor": {
      "title": "validFor",
      "type": "object",
      "required": [
        "startDateTime",
        "endDateTime"
      ],
      "additionalProperties": false,
      "properties": {
        "startDateTime": {
          "description": "Validity period start date",
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "description": "Validity period end date",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "agreementParty": {
      "type": "object",
      "required": [
        "id",
        "href",
        "role",
        "name"
      ],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the party"
        },
        "href": {
          "type": "string",
          "description": "Reference to the party"
        },
        "role": {
          "type": "string",
          "description": "Role of the party"
        },
        "name": {
          "type": "string",
          "description": "Name of the party"
        },
        "extraId": {
          "type": "string",
          "description": "EXTENSION: required in for DxL Greece"
        }
      }
    },
    "agreement": {
      "type": "object",
      "required": [
        "id",
        "href",
        "type"
      ],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the agreement"
        },
        "href": {
          "type": "string",
          "description": "Reference to the agreement"
        },
        "type": {
          "type": "string",
          "description": "Type of the agreement"
        }
      }
    },
    "partyPrivacyProfileTypeRef": {
      "type": "object",
      "required": [
        "id",
        "href"
      ],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the privacy profile type reference"
        },
        "href": {
          "type": "string",
          "description": "Reference to the privacy profile type"
        }
      }
    },
    "partyPrivacyProfile": {
      "description": "JSON Schema generated by XMLSpy v2016 rel. 2 (http://www.altova.com)",
      "type": "object",
      "required": [
        "href",
        "id",
        "name",
        "description",
        "dateCreated",
        "status",
        "validFor",
        "agreedByParty",
        "partyPrivacyProfileType",
        "partyPrivacyProfileCharValue",
        "agreement"
      ],
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference to the privacy profile"
        },
        "id": {
          "type": "string",
          "description": "ID of the privacy profile"
        },
        "name": {
          "type": "string",
          "description": "Name of the privacy profile"
        },
        "description": {
          "type": "string",
          "description": "Description of the privacy profile"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time",
          "description": "Creation date"
        },
        "status": {
          "type": "string",
          "description": "Status"
        },
        "validFor": {
          "$ref": "#/definitions/validFor",
          "description": "Validity period"
        },
        "agreedByParty": {
          "$ref": "#/definitions/agreementParty",
          "description": "Reference to the Party or Party Role who has agreed the Party Privacy Profile."
        },
        "partyPrivacyProfileType": {
          "$ref": "#/definitions/partyPrivacyProfileTypeRef",
          "description": "Reference to the party privacy profile type"
        },
        "partyPrivacyProfileCharValue": {
          "type": "array",
          "description": "List of Privacy rules chosen for this Party Privacy Profile",
          "title": "partyPrivacyProfileCharValue",
          "items": {
            "$ref": "#/definitions/partyPrivacyProfileCharValue"
          }
        },
        "agreement": {
          "$ref": "#/definitions/agreement",
          "description": "Reference to the agreement"
        }
      }
    },
    "partyPrivacyAgreement": {
      "description": "JSON Schema generated by XMLSpy v2016 rel. 2 (http://www.altova.com)",
      "type": "object",
      "required": [
        "agreementPeriod",
        "completionDate",
        "description",
        "documentNumber",
        "href",
        "id",
        "initialDate",
        "name",
        "statementOfIntent",
        "status",
        "type",
        "version",
        "agreementSpecification",
        "agreementItem",
        "engagedPartyRole",
        "agreementAuthorization",
        "characteristic",
        "associatedAgreement",
        "partyPrivacyProfile",
        "partyPrivacyProfileCharValue"
      ],
      "additionalProperties": false,
      "properties": {
        "agreementPeriod": {
          "$ref": "#/definitions/validFor",
          "description": "The time period during which the agreement is in effect"
        },
        "completionDate": {
          "type": "string",
          "description": "Date at which the agreement is completed"
        },
        "description": {
          "type": "string",
          "description": "Narrative that explains the agreement and details about the it , such as why the agreement is taking place"
        },
        "documentNumber": {
          "type": "number",
          "description": "A reference number assigned to an agreement that follows a prescribed numbering system"
        },
        "href": {
          "type": "string",
          "description": "Unique URL identifying the agreement as a resource"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the agreement"
        },
        "initialDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date at which the agreement was initialized"
        },
        "name": {
          "type": "string",
          "description": "A human-readable name for the agreement"
        },
        "statementOfIntent": {
          "type": "string",
          "description": "An overview and goals of the agreement"
        },
        "status": {
          "type": "string",
          "description": "The current status of the agreement. Typical values are: in process, approved and rejected"
        },
        "type": {
          "type": "string",
          "description": "The type of the agreement. For example 'commercial'"
        },
        "version": {
          "type": "string",
          "description": "A string identifying the version of the agreement"
        },
        "agreementSpecification": {
          "$ref": "#/definitions/agreementSpecificationType",
          "description": "Reference to the agreement specification"
        },
        "agreementItem": {
          "type": "array",
          "title": "agreementItem",
          "description": "List of agreement items",
          "items": {
            "$ref": "#/definitions/agreementItem"
          }
        },
        "engagedPartyRole": {
          "$ref": "#/definitions/engagedPartyRoleArray",
          "description": "Reference to the Party or Party Role involved in the Agreement"
        },
        "agreementAuthorization": {
          "type": "array",
          "title": "agreementAuthorization",
          "description": "Represents a business participant that is responsible for approving the Agreement",
          "items": {
            "type": "object",
            "required": [
              "date",
              "signatureRepresentation",
              "state"
            ],
            "additionalProperties": false,
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "signatureRepresentation": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          }
        },
        "characteristic": {
          "type": "array",
          "description": "List of CharValue",
          "items": {
            "$ref": "#/definitions/CharValue"
          }
        },
        "associatedAgreement": {
          "$ref": "#/definitions/hRefTypeArray",
          "description": "Reference to another related Agreement"
        },
        "partyPrivacyProfile": {
          "$ref": "#/definitions/hRefTypeArray",
          "description": "Reference to the party privacy profile"
        },
        "partyPrivacyProfileCharValue": {
          "type": "array",
          "description": "List of Privacy rules chosen for this Party Privacy Profile",
          "items": {
            "$ref": "#/definitions/partyPrivacyProfileCharValue"
          }
        }
      }
    },
    "Error": {
      "description": "Standard TMF error representation",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Application related code (as defined in the API or from a common list)",
          "type": "integer",
          "format": "int32"
        },
        "reason": {
          "description": "Text that explains the reason for error. This can be shown to a client user.",
          "type": "string"
        },
        "message": {
          "description": "Text that provides more details and corrective actions related to the error. This can be shown to a client user.",
          "type": "string"
        },
        "status": {
          "description": "http error code extension like 400-2",
          "type": "string"
        },
        "referenceError": {
          "description": "URL pointing to documentation describing the error",
          "type": "string"
        }
      }
    }
  }
}