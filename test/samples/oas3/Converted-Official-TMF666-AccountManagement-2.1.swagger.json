{
  "openapi": "3.0.1",
  "info": {
    "title": "Account Management",
    "description": "This is Swagger UI environment generated for the TMF Account Management specification",
    "version": "2.1"
  },
  "servers": [
    {
      "url": "https://serverRoot/tmf-api/accountManagement/v2/"
    }
  ],
  "paths": {
    "/partyAccount": {
      "get": {
        "tags": [
          "partyAccount"
        ],
        "summary": "List or find 'PartyAccount' objects",
        "operationId": "listPartyAccount",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated properties to display in response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartyAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "partyAccount"
        ],
        "summary": "Creates a 'PartyAccount'",
        "operationId": "createPartyAccount",
        "requestBody": {
          "description": "The Party Account to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartyAccount_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "partyAccount"
      }
    },
    "/partyAccount/{id}": {
      "get": {
        "tags": [
          "partyAccount"
        ],
        "summary": "Retrieves a 'PartyAccount' by Id",
        "operationId": "retrievePartyAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Party Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartyAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "partyAccount"
        ],
        "summary": "Deletes a 'PartyAccount' by Id",
        "operationId": "deletePartyAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Party Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "partyAccount"
        ],
        "summary": "Updates partially a 'PartyAccount' by Id",
        "operationId": "patchPartyAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Party Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The Party Account to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartyAccount_Update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "partyAccount"
      }
    },
    "/billingAccount": {
      "get": {
        "tags": [
          "billingAccount"
        ],
        "summary": "List or find 'BillingAccount' objects",
        "operationId": "listBillingAccount",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated properties to display in response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billingAccount"
        ],
        "summary": "Creates a 'BillingAccount'",
        "operationId": "createBillingAccount",
        "requestBody": {
          "description": "The Billing Account to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingAccount_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "billingAccount"
      }
    },
    "/billingAccount/{id}": {
      "get": {
        "tags": [
          "billingAccount"
        ],
        "summary": "Retrieves a 'BillingAccount' by Id",
        "operationId": "retrieveBillingAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Billing Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "billingAccount"
        ],
        "summary": "Deletes a 'BillingAccount' by Id",
        "operationId": "deleteBillingAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Billing Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "billingAccount"
        ],
        "summary": "Updates partially a 'BillingAccount' by Id",
        "operationId": "patchBillingAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Billing Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The Billing Account to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingAccount_Update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "billingAccount"
      }
    },
    "/settlementAccount": {
      "get": {
        "tags": [
          "settlementAccount"
        ],
        "summary": "List or find 'SettlementAccount' objects",
        "operationId": "listSettlementAccount",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated properties to display in response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettlementAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "settlementAccount"
        ],
        "summary": "Creates a 'SettlementAccount'",
        "operationId": "createSettlementAccount",
        "requestBody": {
          "description": "The Settlement Account to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettlementAccount_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettlementAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "settlementAccount"
      }
    },
    "/settlementAccount/{id}": {
      "get": {
        "tags": [
          "settlementAccount"
        ],
        "summary": "Retrieves a 'SettlementAccount' by Id",
        "operationId": "retrieveSettlementAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Settlement Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettlementAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "settlementAccount"
        ],
        "summary": "Deletes a 'SettlementAccount' by Id",
        "operationId": "deleteSettlementAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Settlement Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "settlementAccount"
        ],
        "summary": "Updates partially a 'SettlementAccount' by Id",
        "operationId": "patchSettlementAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Settlement Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The Settlement Account to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettlementAccount_Update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettlementAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "settlementAccount"
      }
    },
    "/financialAccount": {
      "get": {
        "tags": [
          "financialAccount"
        ],
        "summary": "List or find 'FinancialAccount' objects",
        "operationId": "listFinancialAccount",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated properties to display in response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "financialAccount"
        ],
        "summary": "Creates a 'FinancialAccount'",
        "operationId": "createFinancialAccount",
        "requestBody": {
          "description": "The Financial Account to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccount_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "financialAccount"
      }
    },
    "/financialAccount/{id}": {
      "get": {
        "tags": [
          "financialAccount"
        ],
        "summary": "Retrieves a 'FinancialAccount' by Id",
        "operationId": "retrieveFinancialAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Financial Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "financialAccount"
        ],
        "summary": "Deletes a 'FinancialAccount' by Id",
        "operationId": "deleteFinancialAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Financial Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "financialAccount"
        ],
        "summary": "Updates partially a 'FinancialAccount' by Id",
        "operationId": "patchFinancialAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Financial Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The Financial Account to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccount_Update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "financialAccount"
      }
    },
    "/billingCycleSpecification": {
      "get": {
        "tags": [
          "billingCycleSpecification"
        ],
        "summary": "List or find 'BillingCycleSpecification' objects",
        "operationId": "listBillingCycleSpecification",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated properties to display in response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingCycleSpecification"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billingCycleSpecification"
        ],
        "summary": "Creates a 'BillingCycleSpecification'",
        "operationId": "createBillingCycleSpecification",
        "requestBody": {
          "description": "The Billing Cycle Specification to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCycleSpecification_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleSpecification"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "billingCycleSpecification"
      }
    },
    "/billingCycleSpecification/{id}": {
      "get": {
        "tags": [
          "billingCycleSpecification"
        ],
        "summary": "Retrieves a 'BillingCycleSpecification' by Id",
        "operationId": "retrieveBillingCycleSpecification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Billing Cycle Specification",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingCycleSpecification"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "billingCycleSpecification"
        ],
        "summary": "Deletes a 'BillingCycleSpecification' by Id",
        "operationId": "deleteBillingCycleSpecification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Billing Cycle Specification",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "billingCycleSpecification"
        ],
        "summary": "Updates partially a 'BillingCycleSpecification' by Id",
        "operationId": "patchBillingCycleSpecification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Billing Cycle Specification",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The Billing Cycle Specification to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCycleSpecification_Update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleSpecification"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "billingCycleSpecification"
      }
    },
    "/billFormat": {
      "get": {
        "tags": [
          "billFormat"
        ],
        "summary": "List or find 'BillFormat' objects",
        "operationId": "listBillFormat",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated properties to display in response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillFormat"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billFormat"
        ],
        "summary": "Creates a 'BillFormat'",
        "operationId": "createBillFormat",
        "requestBody": {
          "description": "The Bill Format to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillFormat_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillFormat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "billFormat"
      }
    },
    "/billFormat/{id}": {
      "get": {
        "tags": [
          "billFormat"
        ],
        "summary": "Retrieves a 'BillFormat' by Id",
        "operationId": "retrieveBillFormat",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Bill Format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillFormat"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "billFormat"
        ],
        "summary": "Deletes a 'BillFormat' by Id",
        "operationId": "deleteBillFormat",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Bill Format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "billFormat"
        ],
        "summary": "Updates partially a 'BillFormat' by Id",
        "operationId": "patchBillFormat",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Bill Format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The Bill Format to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillFormat_Update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillFormat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "billFormat"
      }
    },
    "/billPresentationMedia": {
      "get": {
        "tags": [
          "billPresentationMedia"
        ],
        "summary": "List or find 'BillPresentationMedia' objects",
        "operationId": "listBillPresentationMedia",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated properties to display in response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillPresentationMedia"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billPresentationMedia"
        ],
        "summary": "Creates a 'BillPresentationMedia'",
        "operationId": "createBillPresentationMedia",
        "requestBody": {
          "description": "The Bill Presentation Media to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillPresentationMedia_Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillPresentationMedia"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "billPresentationMedia"
      }
    },
    "/billPresentationMedia/{id}": {
      "get": {
        "tags": [
          "billPresentationMedia"
        ],
        "summary": "Retrieves a 'BillPresentationMedia' by Id",
        "operationId": "retrieveBillPresentationMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Bill Presentation Media",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillPresentationMedia"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "billPresentationMedia"
        ],
        "summary": "Deletes a 'BillPresentationMedia' by Id",
        "operationId": "deleteBillPresentationMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Bill Presentation Media",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "billPresentationMedia"
        ],
        "summary": "Updates partially a 'BillPresentationMedia' by Id",
        "operationId": "patchBillPresentationMedia",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Bill Presentation Media",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The Bill Presentation Media to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillPresentationMedia_Update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillPresentationMedia"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "billPresentationMedia"
      }
    },
    "/hub": {
      "post": {
        "tags": [
          "events subscription"
        ],
        "summary": "Register a listener",
        "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "operationId": "registerListener",
        "requestBody": {
          "description": "Data containing the callback endpoint to deliver the information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSubscriptionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Subscribed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSubscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/hub/{id}": {
      "delete": {
        "tags": [
          "events subscription"
        ],
        "summary": "Unregister a listener",
        "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "operationId": "unregisterListener",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the registered listener",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FinancialAccount": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "href": {
            "type": "string",
            "description": "Unique reference of the account"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party."
      },
      "FinancialAccount_Create": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.\nSkipped properties: id,href"
      },
      "FinancialAccount_Update": {
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.\nSkipped properties: id,href,id,href,lastModified"
      },
      "BillingCycleSpecification": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "billingDateShift": {
            "type": "integer",
            "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
          },
          "billingPeriod": {
            "type": "string",
            "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
          },
          "chargeDateOffset": {
            "type": "integer",
            "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "creditDateOffset": {
            "type": "integer",
            "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "description": {
            "type": "string",
            "description": "An explanation regarding this billing cycle specification"
          },
          "frequency": {
            "type": "string",
            "description": "Frequency of the billing cycle (monthly for instance)"
          },
          "href": {
            "type": "string",
            "description": "Reference of the billing cycle specification"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the billing cycle specification"
          },
          "mailingDateOffset": {
            "type": "integer",
            "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          },
          "paymentDueDateOffset": {
            "type": "integer",
            "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          }
        },
        "description": "A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle."
      },
      "BillingCycleSpecification_Create": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "billingDateShift": {
            "type": "integer",
            "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
          },
          "billingPeriod": {
            "type": "string",
            "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
          },
          "chargeDateOffset": {
            "type": "integer",
            "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "creditDateOffset": {
            "type": "integer",
            "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "description": {
            "type": "string",
            "description": "An explanation regarding this billing cycle specification"
          },
          "frequency": {
            "type": "string",
            "description": "Frequency of the billing cycle (monthly for instance)"
          },
          "mailingDateOffset": {
            "type": "integer",
            "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          },
          "paymentDueDateOffset": {
            "type": "integer",
            "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          }
        },
        "description": "A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.\nSkipped properties: id,href"
      },
      "BillingCycleSpecification_Update": {
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "billingDateShift": {
            "type": "integer",
            "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
          },
          "billingPeriod": {
            "type": "string",
            "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
          },
          "chargeDateOffset": {
            "type": "integer",
            "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "creditDateOffset": {
            "type": "integer",
            "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "description": {
            "type": "string",
            "description": "An explanation regarding this billing cycle specification"
          },
          "frequency": {
            "type": "string",
            "description": "Frequency of the billing cycle (monthly for instance)"
          },
          "mailingDateOffset": {
            "type": "integer",
            "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          },
          "paymentDueDateOffset": {
            "type": "integer",
            "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          }
        },
        "description": "A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.\nSkipped properties: id,href,id,href"
      },
      "BillFormat": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "description": {
            "type": "string",
            "description": "An explanatory text for this bill format"
          },
          "href": {
            "type": "string",
            "description": "Reference of the bill format"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the bill format"
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          }
        },
        "description": "A detailed description of the way in which a bill is presented."
      },
      "BillFormat_Create": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "description": {
            "type": "string",
            "description": "An explanatory text for this bill format"
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          }
        },
        "description": "A detailed description of the way in which a bill is presented.\nSkipped properties: id,href"
      },
      "BillFormat_Update": {
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "description": {
            "type": "string",
            "description": "An explanatory text for this bill format"
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          }
        },
        "description": "A detailed description of the way in which a bill is presented.\nSkipped properties: id,href,id,href"
      },
      "BillPresentationMedia": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "description": {
            "type": "string",
            "description": "An explanatory text describing this bill presentation media"
          },
          "href": {
            "type": "string",
            "description": "Reference of the bill presentation media"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the bill presentation media"
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          }
        },
        "description": "A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page."
      },
      "BillPresentationMedia_Create": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "description": {
            "type": "string",
            "description": "An explanatory text describing this bill presentation media"
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          }
        },
        "description": "A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.\nSkipped properties: id,href"
      },
      "BillPresentationMedia_Update": {
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "description": {
            "type": "string",
            "description": "An explanatory text describing this bill presentation media"
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          }
        },
        "description": "A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.\nSkipped properties: id,href,id,href"
      },
      "PartyAccount": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "href": {
            "type": "string",
            "description": "Unique reference of the account"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "paymentStatus": {
            "type": "string",
            "description": "The condition of the account, such as due, paid, in arrears."
          },
          "billStructure": {
            "$ref": "#/components/schemas/BillStructure"
          },
          "paymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccountRef"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodRef"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "Account used for billing or for settlement purposes concerning a given party (an organization or an individual)."
      },
      "PartyAccount_Create": {
        "required": [
          "name",
          "relatedParty"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "paymentStatus": {
            "type": "string",
            "description": "The condition of the account, such as due, paid, in arrears."
          },
          "billStructure": {
            "$ref": "#/components/schemas/BillStructure"
          },
          "paymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccountRef"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodRef"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "Account used for billing or for settlement purposes concerning a given party (an organization or an individual).\nSkipped properties: id,href"
      },
      "PartyAccount_Update": {
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "paymentStatus": {
            "type": "string",
            "description": "The condition of the account, such as due, paid, in arrears."
          },
          "billStructure": {
            "$ref": "#/components/schemas/BillStructure"
          },
          "paymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccountRef"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodRef"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "Account used for billing or for settlement purposes concerning a given party (an organization or an individual).\nSkipped properties: id,href,id,href,accountBalance"
      },
      "BillingAccount": {
        "required": [
          "name",
          "relatedParty"
        ],
        "type": "object",
        "properties": {
          "paymentStatus": {
            "type": "string",
            "description": "The condition of the account, such as due, paid, in arrears."
          },
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "href": {
            "type": "string",
            "description": "Unique reference of the account"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "billStructure": {
            "$ref": "#/components/schemas/BillStructure"
          },
          "paymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccountRef"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodRef"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on)."
      },
      "BillingAccount_Create": {
        "required": [
          "name",
          "relatedParty"
        ],
        "type": "object",
        "properties": {
          "paymentStatus": {
            "type": "string",
            "description": "The condition of the account, such as due, paid, in arrears."
          },
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "billStructure": {
            "$ref": "#/components/schemas/BillStructure"
          },
          "paymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccountRef"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodRef"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on).\nSkipped properties: id,href"
      },
      "BillingAccount_Update": {
        "type": "object",
        "properties": {
          "paymentStatus": {
            "type": "string",
            "description": "The condition of the account, such as due, paid, in arrears."
          },
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "billStructure": {
            "$ref": "#/components/schemas/BillStructure"
          },
          "paymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccountRef"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodRef"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on).\nSkipped properties: id,href,id,href,accountBalance"
      },
      "SettlementAccount": {
        "required": [
          "name",
          "relatedParty"
        ],
        "type": "object",
        "properties": {
          "paymentStatus": {
            "type": "string",
            "description": "The condition of the account, such as due, paid, in arrears."
          },
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "href": {
            "type": "string",
            "description": "Unique reference of the account"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "billStructure": {
            "$ref": "#/components/schemas/BillStructure"
          },
          "paymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccountRef"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodRef"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "A party account used for settlement purposes. It includes a description of the structure used for the settlement (frequency, presentation media, format and so on)."
      },
      "SettlementAccount_Create": {
        "required": [
          "name",
          "relatedParty"
        ],
        "type": "object",
        "properties": {
          "paymentStatus": {
            "type": "string",
            "description": "The condition of the account, such as due, paid, in arrears."
          },
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "billStructure": {
            "$ref": "#/components/schemas/BillStructure"
          },
          "paymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccountRef"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodRef"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "A party account used for settlement purposes. It includes a description of the structure used for the settlement (frequency, presentation media, format and so on).\nSkipped properties: id,href"
      },
      "SettlementAccount_Update": {
        "type": "object",
        "properties": {
          "paymentStatus": {
            "type": "string",
            "description": "The condition of the account, such as due, paid, in arrears."
          },
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the party account"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
          },
          "type": {
            "type": "string",
            "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
          },
          "billStructure": {
            "$ref": "#/components/schemas/BillStructure"
          },
          "paymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccountRef"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodRef"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          }
        },
        "description": "A party account used for settlement purposes. It includes a description of the structure used for the settlement (frequency, presentation media, format and so on).\nSkipped properties: id,href,id,href,accountBalance"
      },
      "Money": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
          },
          "value": {
            "type": "number",
            "description": "A positive floating point number",
            "format": "float"
          }
        },
        "description": "A base / value business entity used to represent money"
      },
      "RelatedPartyRef": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "@referredType": {
            "type": "string",
            "description": "Generic attribute indicating the name of the class type of the referred resource entity."
          },
          "href": {
            "type": "string",
            "description": "Reference of the related party, could be a party reference or a party role reference"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of a related party"
          },
          "name": {
            "type": "string",
            "description": "Name of the related party"
          },
          "role": {
            "type": "string",
            "description": "Role of the related party."
          }
        },
        "description": "RelatedParty reference. A related party defines party or party role linked to a specific entity."
      },
      "AccountTaxExemption": {
        "required": [
          "issuingJurisdiction",
          "validFor"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "certificateNumber": {
            "type": "string",
            "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
          },
          "issuingJurisdiction": {
            "type": "string",
            "description": "Name of the taxing jurisdiction for which taxes are exempt"
          },
          "reason": {
            "type": "string",
            "description": "Reason of the tax exemption"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          }
        },
        "description": "Proof of freedom from taxes imposed by a taxing jurisdiction"
      },
      "Contact": {
        "required": [
          "contactType",
          "validFor"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "contactName": {
            "type": "string",
            "description": "A displayable name for that contact"
          },
          "contactType": {
            "type": "string",
            "description": "Type of contact (primary, secondary...)"
          },
          "partyRoleType": {
            "type": "string",
            "description": "Identifies what kind of party role type is linked to the contact (a account manager...)"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "contactMedium": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactMedium"
            }
          },
          "relatedParty": {
            "$ref": "#/components/schemas/RelatedPartyRef"
          }
        },
        "description": "An individual or an organization used as a contact point for a given account and accessed via some contact medium."
      },
      "AccountBalance": {
        "required": [
          "amount",
          "type",
          "validFor"
        ],
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "type": {
            "type": "string",
            "description": "Type of the balance : deposit balance, disputed balance, loyalty balance, receivable balance..."
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          }
        },
        "description": "Balances linked to the account"
      },
      "AccountRelationship": {
        "required": [
          "relationshipType",
          "validFor"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "type": "string",
            "description": "Type of relationship"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "account": {
            "$ref": "#/components/schemas/AccountRef"
          }
        },
        "description": "Significant connection between accounts. For instance an aggregating account for a list of shop branches each having its own billing account."
      },
      "TimePeriod": {
        "type": "object",
        "properties": {
          "endDateTime": {
            "type": "string",
            "description": "An instant of time, ending at the TimePeriod.",
            "format": "date-time"
          },
          "startDateTime": {
            "type": "string",
            "description": "An instant of time, starting at the TimePeriod",
            "format": "date-time"
          }
        },
        "description": "A base / value business entity used to represent a period of time between two timepoints."
      },
      "ContactMedium": {
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "preferred": {
            "type": "boolean",
            "description": "If true, indicates that is the preferred contact medium"
          },
          "type": {
            "type": "string",
            "description": "Type of the contact medium, such as: email address, telephone number, postal address"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "characteristic": {
            "$ref": "#/components/schemas/MediumCharacteristic"
          }
        },
        "description": "Indicates the contact medium that could be used to contact the party."
      },
      "MediumCharacteristic": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The city"
          },
          "country": {
            "type": "string",
            "description": "The country"
          },
          "emailAddress": {
            "type": "string",
            "description": "Full email address in standard format"
          },
          "faxNumber": {
            "type": "string",
            "description": "The fax number of the contact"
          },
          "phoneNumber": {
            "type": "string",
            "description": "The primary phone number of the contact"
          },
          "postCode": {
            "type": "string",
            "description": "Postcode"
          },
          "stateOrProvince": {
            "type": "string",
            "description": "State or province"
          },
          "street1": {
            "type": "string",
            "description": "Describes the street"
          },
          "street2": {
            "type": "string",
            "description": "Complementary street description"
          },
          "type": {
            "type": "string",
            "description": "Type of medium (fax, mobile phone...)"
          }
        },
        "description": "Describes the contact medium characteristics that could be used to contact a party (an individual or an organization)"
      },
      "AccountRef": {
        "type": "object",
        "properties": {
          "@referredType": {
            "type": "string",
            "description": "Generic attribute indicating the name of the class type of the referred resource entity."
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the account"
          },
          "href": {
            "type": "string",
            "description": "Reference of the account"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the account"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          }
        },
        "description": "Account reference. A account may be a party account or a financial account."
      },
      "BillStructure": {
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "presentationMedia": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillPresentationMediaRef"
            }
          },
          "format": {
            "$ref": "#/components/schemas/BillFormatRef"
          },
          "cycleSpecification": {
            "$ref": "#/components/schemas/BillingCycleSpecificationRef"
          }
        },
        "description": "The structure of the bill for party accounts (billling or settlement)."
      },
      "PaymentPlan": {
        "type": "object",
        "properties": {
          "@baseType": {
            "type": "string",
            "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
          },
          "@type": {
            "type": "string",
            "description": "Generic attribute containing the name of the resource class type"
          },
          "numberOfPayments": {
            "type": "integer",
            "description": "Number of payments used to spread the global payment"
          },
          "paymentFrequency": {
            "type": "string",
            "description": "Frequency of the payments, such as monthly and bimonthly"
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the payment plan"
          },
          "status": {
            "type": "string",
            "description": "Status of the payment plan (effective, ineffective)"
          },
          "totalAmount": {
            "$ref": "#/components/schemas/Money"
          },
          "type": {
            "type": "string",
            "description": "Type of payment plan"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodRef"
          }
        },
        "description": "Defines a plan for payment (when a party wants to spread his payments)"
      },
      "FinancialAccountRef": {
        "type": "object",
        "properties": {
          "@referredType": {
            "type": "string",
            "description": "Generic attribute indicating the name of the class type of the referred resource entity."
          },
          "href": {
            "type": "string",
            "description": "Unique reference of the account"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the account"
          },
          "name": {
            "type": "string",
            "description": "Name of the account"
          },
          "accountBalance": {
            "$ref": "#/components/schemas/AccountBalance"
          }
        },
        "description": "AccountReceivable reference. An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. An account receivable aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party."
      },
      "PaymentMethodRef": {
        "type": "object",
        "properties": {
          "@referredType": {
            "type": "string",
            "description": "Generic attribute indicating the name of the class type of the referred resource entity."
          },
          "href": {
            "type": "string",
            "description": "Reference of the payment mean"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the payment mean"
          },
          "name": {
            "type": "string",
            "description": "Name of the payment mean"
          }
        },
        "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit)."
      },
      "BillPresentationMediaRef": {
        "type": "object",
        "properties": {
          "@referredType": {
            "type": "string",
            "description": "Generic attribute indicating the name of the class type of the referred resource entity."
          },
          "href": {
            "type": "string",
            "description": "Reference of the bill presentation media"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the bill presentation media"
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          }
        },
        "description": "PresentationMedia reference. A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page."
      },
      "BillFormatRef": {
        "type": "object",
        "properties": {
          "@referredType": {
            "type": "string",
            "description": "Generic attribute indicating the name of the class type of the referred resource entity."
          },
          "href": {
            "type": "string",
            "description": "Reference of the bill format"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the bill format"
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          }
        },
        "description": "BillFormat reference. A bill format is a description of the way in which a bill is presented."
      },
      "BillingCycleSpecificationRef": {
        "type": "object",
        "properties": {
          "@referredType": {
            "type": "string",
            "description": "Generic attribute indicating the name of the class type of the referred resource entity."
          },
          "dateShift": {
            "type": "integer",
            "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
          },
          "frequency": {
            "type": "string",
            "description": "Frequency of the billing cycle (monthly for instance)"
          },
          "href": {
            "type": "string",
            "description": "Reference of the billing cycle specification"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the billing cycle specification"
          },
          "name": {
            "type": "string",
            "description": "A short descriptive name"
          }
        },
        "description": "BillingCycleSpecification reference. A description of when to initiate a billing cycle and the various sub steps of a billing cycle."
      },
      "EventSubscription": {
        "required": [
          "callback",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the listener"
          },
          "callback": {
            "type": "string",
            "description": "The callback being registered."
          },
          "query": {
            "type": "string",
            "description": "additional data to be passed"
          }
        }
      },
      "EventSubscriptionInput": {
        "required": [
          "callback"
        ],
        "type": "object",
        "properties": {
          "callback": {
            "type": "string",
            "description": "The callback being registered."
          },
          "query": {
            "type": "string",
            "description": "additional data to be passed"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "reason"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Application related code."
          },
          "reason": {
            "type": "integer",
            "description": "Text that explains the reason for error."
          },
          "message": {
            "type": "string",
            "description": "(optional) Text that provide more details and corrective actions related to the error."
          },
          "status": {
            "type": "integer",
            "description": "(optional) http error code extension like 400-2"
          },
          "referenceError": {
            "type": "string",
            "description": "(optional) A URL to online documentation that provides more information about the error."
          },
          "@type": {
            "type": "string",
            "description": "(optional) The class type of a REST resource."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "(optional) A link to the schema describing a REST resource."
          }
        }
      }
    }
  }
}