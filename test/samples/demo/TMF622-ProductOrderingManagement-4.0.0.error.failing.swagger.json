{
  "swagger": "2.0",
  "info": {
    "description": "## TMF API Reference : TMF 622 - Product Ordering Management\n\n## Release : 17.5 - November 2017\n\nThe Product Ordering API provides a standardized mechanism for placing a product order with all of the necessary order parameters. The API consists of a simple set of operations that interact with CRM/Order Negotiation systems in a consistent manner. A product order is created based on a product offer that is defined in a catalog. The product offer identifies the product or set of products that are available to a customer, and includes characteristics such as pricing, product options and market.\n\nThe product order references the product offer and identifies any specific requests made by the customer.\n\n### Product Order resource\nA Product Order is a type of order which  can  be used to place an order  between a customer and a service provider or between a service provider and a partner and vice versa. Main Product  Order  attributes  are  its  identifier,  state,  priority  category  (mass  market,  Enterprise,  etc.) related dates (start, completion, etc.), related billing account, related parties and order items. Main Order Items (aka order lines) attributes are the ordered offering and product characteristics with the  related  action  to  be performed  (e.g.  add  or  delete  the  products),  state,  location  information  for delivery, order item price and price alteration.\n\n### Product Order API performs the following operations on product order :\n- Retrieval of a product order or a collection of product orders depending on filter criteria\n- Partial update of a product order (including updating rules)\n- Creation of a product order (including default values and creation rules)\n- Deletion of product order (for administration purposes)\n- Notification of events on product order.",
    "version": "4.0.0",
    "title": "TMF622 Product Ordering Management API",
    "x-api-proxy-version": 1.2
  },
  "host": "api.developer.com",
  "x-backend-connection-prod": "TBC",
  "x-backend-connection-preprod": "TBC",
  "x-backend-connection-basePath": "/tmf-api/productOrdering/v4",
  "basePath": "/tmf-api/productOrdering/v4.1/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json;charset=utf-8"
  ],
  "produces": [
    "application/json;charset=utf-8"
  ],
  "tags": [
    {
      "name": "ProductOrder",
      "description": ""
    }
  ],
  "securityDefinitions": {
    "apix_oauth": {
      "type": "oauth2",
      "tokenUrl": "https://api.developer.com/v1/apixoauth2password/oauth2/token",
      "flow": "password",
      "scopes": {
        "PRODUCT_ORDERING_ALL": "API Consumer is allowed to consume all the operations.",
        "TMF622_PRODUCT_ORDERING_MANAGEMENT_ALL": "API Consumer is allowed to consume all the operations."
      }
    }
  },
  "paths": {
    "/productOrder": {
      "post": {
        "tags": [
          "ProductOrder"
        ],
        "operationId": "productOrderCreate",
        "summary": "Create a product order",
        "description": "This operation creates a product order entity. Mandatory and non mandatory attributes, additional rules and default values are provided in the specifications document.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": true,
            "x-example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "productOrder",
            "required": true,
            "in": "body",
            "description": "The request object",
            "schema": {
              "$ref": "#/definitions/POST_REQ_ProductOrder"
            },
            "x-examples": {
              "application/json": {
                "externalId": "Telco01",
                "priority": "1",
                "description": "Order illustration UC1",
                "category": "Residential",
                "state": "Completed",
                "orderDate": "2018-12-17T13:01:35.745Z",
                "completionDate": "2018-12-17T13:01:35.745Z",
                "requestedStartDate": "2018-12-17T13:01:35.745Z",
                "requestedCompletionDate": "2018-12-17T13:01:35.745Z",
                "expectedCompletionDate": "2018-12-17T13:01:35.745Z",
                "notificationContact": "jean.pontus@tmforum.com",
                "@baseType": "productOrder",
                "@type": "productOrder",
                "@schemaLocation": "a schema location",
                "channel": {
                  "id": "1",
                  "href": "http://referenceToAChannel",
                  "name": "store",
                  "role": "submitChannel",
                  "@type": "store"
                },
                "note": {
                  "text": "Order to illustrate UC1",
                  "date": "2018-12-17T13:01:35.745Z",
                  "author": "Jean-Lyuc Tymen"
                },
                "relatedParty": [
                  {
                    "id": "11",
                    "href": "https://apixHost/tmf-api/partyManagement/v1/individual/11",
                    "name": "Joe Doe",
                    "role": "customer",
                    "@referredType": "individualParty"
                  }
                ],
                "payment": [
                  {
                    "id": "2365",
                    "href": "https://apixHost/tmf-api/paymentManagement/v1/payment/2365",
                    "name": "shop payment cash #2365",
                    "@referredType": "cash"
                  }
                ],
                "billingAccount": {
                  "id": "BA1513",
                  "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                  "name": "BA01",
                  "@referredType": "billingAccount"
                },
                "orderTotalPrice": [
                  {
                    "name": "Final price",
                    "description": "Total price of the order",
                    "priceType": "recuring",
                    "unitOfMeasure": "Euros",
                    "recurringChargePeriod": "monthly",
                    "@type": "a type",
                    "@schemaLocation": "a schema location",
                    "price": {
                      "taxIncludedAmount": {
                        "value": 19,
                        "unit": "Euros"
                      },
                      "dutyFreeAmount": {
                        "value": 0,
                        "unit": "Euros"
                      },
                      "taxRate": 0.19,
                      "percentage": 19,
                      "@type": "a type",
                      "@schemaLocation": "a schema location"
                    },
                    "priceAlteration": [
                      {
                        "name": "20Discount3Months",
                        "description": "discount 20% for 3 months",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "applicationDuration": "a duration",
                        "priority": 1,
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "@type": "a type",
                        "@schemaLocation": "a schema location"
                      }
                    ],
                    "billingAccount": {
                      "id": "BA1513",
                      "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                      "name": "BA01",
                      "@referredType": "billingAccount"
                    }
                  }
                ],
                "orderItem": [
                  {
                    "id": "110",
                    "action": "add",
                    "state": "Completed",
                    "quantity": 1,
                    "@type": "a type",
                    "@schemaLocation": "a schema location",
                    "appointment": {
                      "href": "https://apixHost/appointment/v3/appointment/11",
                      "id": "11",
                      "@referredType": "a type"
                    },
                    "billingAccount": {
                      "id": "BA1513",
                      "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                      "name": "BA01",
                      "@referredType": "billingAccount"
                    },
                    "itemPrice": [
                      {
                        "name": "monthly price",
                        "description": "TMF Tariff Plan monthly fee",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "@type": "a type",
                        "@schemaLocation": "a schema location",
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "priceAlteration": [
                          {
                            "name": "20Discount3Months",
                            "description": "discount 20% for 3 months",
                            "priceType": "recuring",
                            "unitOfMeasure": "Euros",
                            "recurringChargePeriod": "monthly",
                            "applicationDuration": "a duration",
                            "priority": 1,
                            "price": {
                              "taxIncludedAmount": {
                                "value": 19,
                                "unit": "Euros"
                              },
                              "dutyFreeAmount": {
                                "value": 0,
                                "unit": "string"
                              },
                              "taxRate": 0.19,
                              "percentage": 19,
                              "@type": "a type",
                              "@schemaLocation": "a schema location"
                            },
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        ],
                        "billingAccount": {
                          "id": "BA1513",
                          "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                          "name": "BA01",
                          "@referredType": "billingAccount"
                        }
                      }
                    ],
                    "itemTotalPrice": [
                      {
                        "name": "Item price",
                        "description": "Total price of the item",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "@type": "a type",
                        "@schemaLocation": "a schema location",
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "priceAlteration": [
                          {
                            "name": "20Discount3Months",
                            "description": "discount 20% for 3 months",
                            "priceType": "recuring",
                            "unitOfMeasure": "Euros",
                            "recurringChargePeriod": "monthly",
                            "applicationDuration": "a duration",
                            "priority": 1,
                            "price": {
                              "taxIncludedAmount": {
                                "value": 19,
                                "unit": "Euros"
                              },
                              "dutyFreeAmount": {
                                "value": 0,
                                "unit": "string"
                              },
                              "taxRate": 0.19,
                              "percentage": 19,
                              "@type": "a type",
                              "@schemaLocation": "a schema location"
                            },
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        ],
                        "billingAccount": {
                          "id": "BA1513",
                          "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                          "name": "BA01",
                          "@referredType": "billingAccount"
                        }
                      }
                    ],
                    "productOffering": {
                      "id": "14344",
                      "href": "https://apixHost/tmf-api/productCatalogManagement/v2/productOffering/14344",
                      "name": "TMF TariffPlan",
                      "@referredType": "a type"
                    },
                    "product": {
                      "id": "14395",
                      "href": "https://apixHost/tmf-api/productInventory/v3/product/14395",
                      "name": "Product Name",
                      "place": [
                        {
                          "id": "222",
                          "href": "https://apixHost/tmf-api/productInventory/v3/product/222",
                          "name": "a place name",
                          "role": "a role",
                          "@referredType": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      ],
                      "characteristic": [
                        {
                          "name": "CoverageOption",
                          "value": "National",
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      ],
                      "relatedParty": [
                        {
                          "id": "333",
                          "href": "https://apixHost/tmf-api/partyManagement/v1/individual/333",
                          "name": "John Doe",
                          "role": "seller",
                          "@referredType": "a type"
                        }
                      ],
                      "productRelationship": [
                        {
                          "type": "reliesOn"
                        }
                      ],
                      "productSpecification": {
                        "id": "14395",
                        "href": "https://apixHost/tmf-api/productCatalogManagement/v2/productSpecification/14395",
                        "version": "1",
                        "name": "A nsme",
                        "targetResourceSchema": {
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      },
                      "@type": "a type",
                      "@schemaLocation": "a schema location"
                    },
                    "orderItemRelationship": [
                      {
                        "type": "reliesOn",
                        "id": "45"
                      }
                    ],
                    "qualification": [
                      {
                        "id": "12",
                        "href": "https://apixHost/tmf-api/productOfferingQualificationManagement/v1/productOfferingQualification/12",
                        "qualificationItemId": "1",
                        "@referredType": "a type"
                      }
                    ],
                    "payment": [
                      {
                        "id": "2365",
                        "href": "https://apixHost/tmf-api/paymentManagement/v1/payment/2365",
                        "name": "shop payment cash #2365",
                        "@referredType": "cash"
                      }
                    ],
                    "itemTerm": [
                      {
                        "name": "12MonthsCommitment",
                        "description": "12 Months commitment",
                        "duration": {
                          "value": 12,
                          "unit": "Months"
                        },
                        "@type": "a type"
                      }
                    ],
                    "orderItem": [
                      null
                    ]
                  }
                ],
                "type": "ER Service"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            },
            "examples": {
              "application/json": {
                "id": "11",
                "href": "https://apixHost/tmf-api/productOrdering/v4/productOrder/11",
                "externalId": "Telco01",
                "priority": "1",
                "description": "Order illustration UC1",
                "category": "Residential",
                "state": "Completed",
                "orderDate": "2018-12-17T13:01:35.745Z",
                "completionDate": "2018-12-17T13:01:35.745Z",
                "requestedStartDate": "2018-12-17T13:01:35.745Z",
                "requestedCompletionDate": "2018-12-17T13:01:35.745Z",
                "expectedCompletionDate": "2018-12-17T13:01:35.745Z",
                "notificationContact": "jean.pontus@tmforum.com",
                "@baseType": "productOrder",
                "@type": "productOrder",
                "@schemaLocation": "a schema location",
                "channel": {
                  "id": "1",
                  "href": "http://referenceToAChannel",
                  "name": "store",
                  "role": "submitChannel",
                  "@type": "store"
                },
                "note": {
                  "text": "Order to illustrate UC1",
                  "date": "2018-12-17T13:01:35.745Z",
                  "author": "Jean-Lyuc Tymen"
                },
                "relatedParty": [
                  {
                    "id": "11",
                    "href": "https://apixHost/tmf-api/partyManagement/v1/individual/11",
                    "name": "Joe Doe",
                    "role": "customer",
                    "@referredType": "individualParty"
                  }
                ],
                "payment": [
                  {
                    "id": "2365",
                    "href": "https://apixHost/tmf-api/paymentManagement/v1/payment/2365",
                    "name": "shop payment cash #2365",
                    "@referredType": "cash"
                  }
                ],
                "billingAccount": {
                  "id": "BA1513",
                  "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                  "name": "BA01",
                  "@referredType": "billingAccount"
                },
                "orderTotalPrice": [
                  {
                    "name": "Final price",
                    "description": "Total price of the order",
                    "priceType": "recuring",
                    "unitOfMeasure": "Euros",
                    "recurringChargePeriod": "monthly",
                    "@type": "a type",
                    "@schemaLocation": "a schema location",
                    "price": {
                      "taxIncludedAmount": {
                        "value": 19,
                        "unit": "Euros"
                      },
                      "dutyFreeAmount": {
                        "value": 0,
                        "unit": "Euros"
                      },
                      "taxRate": 0.19,
                      "percentage": 19,
                      "@type": "a type",
                      "@schemaLocation": "a schema location"
                    },
                    "priceAlteration": [
                      {
                        "name": "20Discount3Months",
                        "description": "discount 20% for 3 months",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "applicationDuration": "a duration",
                        "priority": 1,
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "@type": "a type",
                        "@schemaLocation": "a schema location"
                      }
                    ],
                    "billingAccount": {
                      "id": "BA1513",
                      "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                      "name": "BA01",
                      "@referredType": "billingAccount"
                    }
                  }
                ],
                "orderItem": [
                  {
                    "id": "110",
                    "action": "add",
                    "state": "Completed",
                    "quantity": 1,
                    "@type": "a type",
                    "@schemaLocation": "a schema location",
                    "appointment": {
                      "href": "https://apixHost/appointment/v3/appointment/11",
                      "id": "11",
                      "@referredType": "a type"
                    },
                    "billingAccount": {
                      "id": "BA1513",
                      "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                      "name": "BA01",
                      "@referredType": "billingAccount"
                    },
                    "itemPrice": [
                      {
                        "name": "monthly price",
                        "description": "TMF Tariff Plan monthly fee",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "@type": "a type",
                        "@schemaLocation": "a schema location",
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "priceAlteration": [
                          {
                            "name": "20Discount3Months",
                            "description": "discount 20% for 3 months",
                            "priceType": "recuring",
                            "unitOfMeasure": "Euros",
                            "recurringChargePeriod": "monthly",
                            "applicationDuration": "a duration",
                            "priority": 1,
                            "price": {
                              "taxIncludedAmount": {
                                "value": 19,
                                "unit": "Euros"
                              },
                              "dutyFreeAmount": {
                                "value": 0,
                                "unit": "string"
                              },
                              "taxRate": 0.19,
                              "percentage": 19,
                              "@type": "a type",
                              "@schemaLocation": "a schema location"
                            },
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        ],
                        "billingAccount": {
                          "id": "BA1513",
                          "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                          "name": "BA01",
                          "@referredType": "billingAccount"
                        }
                      }
                    ],
                    "itemTotalPrice": [
                      {
                        "name": "Item price",
                        "description": "Total price of the item",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "@type": "a type",
                        "@schemaLocation": "a schema location",
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "priceAlteration": [
                          {
                            "name": "20Discount3Months",
                            "description": "discount 20% for 3 months",
                            "priceType": "recuring",
                            "unitOfMeasure": "Euros",
                            "recurringChargePeriod": "monthly",
                            "applicationDuration": "a duration",
                            "priority": 1,
                            "price": {
                              "taxIncludedAmount": {
                                "value": 19,
                                "unit": "Euros"
                              },
                              "dutyFreeAmount": {
                                "value": 0,
                                "unit": "string"
                              },
                              "taxRate": 0.19,
                              "percentage": 19,
                              "@type": "a type",
                              "@schemaLocation": "a schema location"
                            },
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        ],
                        "billingAccount": {
                          "id": "BA1513",
                          "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                          "name": "BA01",
                          "@referredType": "billingAccount"
                        }
                      }
                    ],
                    "productOffering": {
                      "id": "14344",
                      "href": "https://apixHost/tmf-api/productCatalogManagement/v2/productOffering/14344",
                      "name": "TMF TariffPlan",
                      "@referredType": "a type"
                    },
                    "product": {
                      "id": "14395",
                      "href": "https://apixHost/tmf-api/productInventory/v3/product/14395",
                      "name": "Product Name",
                      "place": [
                        {
                          "id": "222",
                          "href": "https://apixHost/tmf-api/productInventory/v3/product/222",
                          "name": "a place name",
                          "role": "a role",
                          "@referredType": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      ],
                      "characteristic": [
                        {
                          "name": "CoverageOption",
                          "value": "National",
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      ],
                      "relatedParty": [
                        {
                          "id": "333",
                          "href": "https://apixHost/tmf-api/partyManagement/v1/individual/333",
                          "name": "John Doe",
                          "role": "seller",
                          "@referredType": "a type"
                        }
                      ],
                      "productRelationship": [
                        {
                          "type": "reliesOn"
                        }
                      ],
                      "productSpecification": {
                        "id": "14395",
                        "href": "https://apixHost/tmf-api/productCatalogManagement/v2/productSpecification/14395",
                        "version": "1",
                        "name": "A nsme",
                        "targetResourceSchema": {
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      },
                      "@type": "a type",
                      "@schemaLocation": "a schema location"
                    },
                    "orderItemRelationship": [
                      {
                        "type": "reliesOn",
                        "id": "45"
                      }
                    ],
                    "qualification": [
                      {
                        "id": "12",
                        "href": "https://apixHost/tmf-api/productOfferingQualificationManagement/v1/productOfferingQualification/12",
                        "qualificationItemId": "1",
                        "@referredType": "a type"
                      }
                    ],
                    "payment": [
                      {
                        "id": "2365",
                        "href": "https://apixHost/tmf-api/paymentManagement/v1/payment/2365",
                        "name": "shop payment cash #2365",
                        "@referredType": "cash"
                      }
                    ],
                    "itemTerm": [
                      {
                        "name": "12MonthsCommitment",
                        "description": "12 Months commitment",
                        "duration": {
                          "value": 12,
                          "unit": "Months"
                        },
                        "@type": "a type"
                      }
                    ],
                    "orderItem": [
                      null
                    ]
                  }
                ],
                "type": "ER Service"
              }
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized\n\nList of supported error codes:\n- 40: Missing credentials\n- 41: Invalid credentials\n- 42: Expired credentials",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden\n\nList of supported error codes:\n- 50: Access denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many requests",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable\n\nList of supported error codes:\n- 5: The service is temporarily unavailable\n- 6: Orange API is over capacity, retry later !",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "PRODUCT_ORDERING_ALL",
              "TMF622_PRODUCT_ORDERING_MANAGEMENT_ALL"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "ProductOrder"
        ],
        "operationId": "productOrderFind",
        "summary": "List product orders",
        "description": "This operation list product order entities. Attribute  selection  is enabled for all first level attributes. Filtering may  be available  depending  on the compliance  level supported  by an implementation.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attributes selection",
            "type": "string",
            "x-example": "externalId, priority, description"
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Requested index for start of the resources to be provided in the response",
            "type": "string",
            "x-example": 10
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Requested number of resources to be provided in the response",
            "type": "string",
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductOrder"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "11",
                  "href": "https://apixHost/tmf-api/productOrdering/v4/productOrder/11",
                  "externalId": "Telco01",
                  "priority": "1",
                  "description": "Order illustration UC1",
                  "category": "Residential",
                  "state": "Completed",
                  "orderDate": "2018-12-17T13:01:35.745Z",
                  "completionDate": "2018-12-17T13:01:35.745Z",
                  "requestedStartDate": "2018-12-17T13:01:35.745Z",
                  "requestedCompletionDate": "2018-12-17T13:01:35.745Z",
                  "expectedCompletionDate": "2018-12-17T13:01:35.745Z",
                  "notificationContact": "jean.pontus@tmforum.com",
                  "@baseType": "productOrder",
                  "@type": "productOrder",
                  "@schemaLocation": "a schema location",
                  "channel": {
                    "id": "1",
                    "href": "http://referenceToAChannel",
                    "name": "store",
                    "role": "submitChannel",
                    "@type": "store"
                  },
                  "note": {
                    "text": "Order to illustrate UC1",
                    "date": "2018-12-17T13:01:35.745Z",
                    "author": "Jean-Lyuc Tymen"
                  },
                  "relatedParty": [
                    {
                      "id": "11",
                      "href": "https://apixHost/tmf-api/partyManagement/v1/individual/11",
                      "name": "Joe Doe",
                      "role": "customer",
                      "@referredType": "individualParty"
                    }
                  ],
                  "payment": [
                    {
                      "id": "2365",
                      "href": "https://apixHost/tmf-api/paymentManagement/v1/payment/2365",
                      "name": "shop payment cash #2365",
                      "@referredType": "cash"
                    }
                  ],
                  "billingAccount": {
                    "id": "BA1513",
                    "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                    "name": "BA01",
                    "@referredType": "billingAccount"
                  },
                  "orderTotalPrice": [
                    {
                      "name": "Final price",
                      "description": "Total price of the order",
                      "priceType": "recuring",
                      "unitOfMeasure": "Euros",
                      "recurringChargePeriod": "monthly",
                      "@type": "a type",
                      "@schemaLocation": "a schema location",
                      "price": {
                        "taxIncludedAmount": {
                          "value": 19,
                          "unit": "Euros"
                        },
                        "dutyFreeAmount": {
                          "value": 0,
                          "unit": "Euros"
                        },
                        "taxRate": 0.19,
                        "percentage": 19,
                        "@type": "a type",
                        "@schemaLocation": "a schema location"
                      },
                      "priceAlteration": [
                        {
                          "name": "20Discount3Months",
                          "description": "discount 20% for 3 months",
                          "priceType": "recuring",
                          "unitOfMeasure": "Euros",
                          "recurringChargePeriod": "monthly",
                          "applicationDuration": "a duration",
                          "priority": 1,
                          "price": {
                            "taxIncludedAmount": {
                              "value": 19,
                              "unit": "Euros"
                            },
                            "dutyFreeAmount": {
                              "value": 0,
                              "unit": "Euros"
                            },
                            "taxRate": 0.19,
                            "percentage": 19,
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          },
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      ],
                      "billingAccount": {
                        "id": "BA1513",
                        "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                        "name": "BA01",
                        "@referredType": "billingAccount"
                      }
                    }
                  ],
                  "orderItem": [
                    {
                      "id": "110",
                      "action": "add",
                      "state": "Completed",
                      "quantity": 1,
                      "@type": "a type",
                      "@schemaLocation": "a schema location",
                      "appointment": {
                        "href": "https://apixHost/appointment/v3/appointment/11",
                        "id": "11",
                        "@referredType": "a type"
                      },
                      "billingAccount": {
                        "id": "BA1513",
                        "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                        "name": "BA01",
                        "@referredType": "billingAccount"
                      },
                      "itemPrice": [
                        {
                          "name": "monthly price",
                          "description": "TMF Tariff Plan monthly fee",
                          "priceType": "recuring",
                          "unitOfMeasure": "Euros",
                          "recurringChargePeriod": "monthly",
                          "@type": "a type",
                          "@schemaLocation": "a schema location",
                          "price": {
                            "taxIncludedAmount": {
                              "value": 19,
                              "unit": "Euros"
                            },
                            "dutyFreeAmount": {
                              "value": 0,
                              "unit": "Euros"
                            },
                            "taxRate": 0.19,
                            "percentage": 19,
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          },
                          "priceAlteration": [
                            {
                              "name": "20Discount3Months",
                              "description": "discount 20% for 3 months",
                              "priceType": "recuring",
                              "unitOfMeasure": "Euros",
                              "recurringChargePeriod": "monthly",
                              "applicationDuration": "a duration",
                              "priority": 1,
                              "price": {
                                "taxIncludedAmount": {
                                  "value": 19,
                                  "unit": "Euros"
                                },
                                "dutyFreeAmount": {
                                  "value": 0,
                                  "unit": "string"
                                },
                                "taxRate": 0.19,
                                "percentage": 19,
                                "@type": "a type",
                                "@schemaLocation": "a schema location"
                              },
                              "@type": "a type",
                              "@schemaLocation": "a schema location"
                            }
                          ],
                          "billingAccount": {
                            "id": "BA1513",
                            "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                            "name": "BA01",
                            "@referredType": "billingAccount"
                          }
                        }
                      ],
                      "itemTotalPrice": [
                        {
                          "name": "Item price",
                          "description": "Total price of the item",
                          "priceType": "recuring",
                          "unitOfMeasure": "Euros",
                          "recurringChargePeriod": "monthly",
                          "@type": "a type",
                          "@schemaLocation": "a schema location",
                          "price": {
                            "taxIncludedAmount": {
                              "value": 19,
                              "unit": "Euros"
                            },
                            "dutyFreeAmount": {
                              "value": 0,
                              "unit": "Euros"
                            },
                            "taxRate": 0.19,
                            "percentage": 19,
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          },
                          "priceAlteration": [
                            {
                              "name": "20Discount3Months",
                              "description": "discount 20% for 3 months",
                              "priceType": "recuring",
                              "unitOfMeasure": "Euros",
                              "recurringChargePeriod": "monthly",
                              "applicationDuration": "a duration",
                              "priority": 1,
                              "price": {
                                "taxIncludedAmount": {
                                  "value": 19,
                                  "unit": "Euros"
                                },
                                "dutyFreeAmount": {
                                  "value": 0,
                                  "unit": "string"
                                },
                                "taxRate": 0.19,
                                "percentage": 19,
                                "@type": "a type",
                                "@schemaLocation": "a schema location"
                              },
                              "@type": "a type",
                              "@schemaLocation": "a schema location"
                            }
                          ],
                          "billingAccount": {
                            "id": "BA1513",
                            "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                            "name": "BA01",
                            "@referredType": "billingAccount"
                          }
                        }
                      ],
                      "productOffering": {
                        "id": "14344",
                        "href": "https://apixHost/tmf-api/productCatalogManagement/v2/productOffering/14344",
                        "name": "TMF TariffPlan",
                        "@referredType": "a type"
                      },
                      "product": {
                        "id": "14395",
                        "href": "https://apixHost/tmf-api/productInventory/v3/product/14395",
                        "name": "Product Name",
                        "place": [
                          {
                            "id": "222",
                            "href": "https://apixHost/tmf-api/productInventory/v3/product/222",
                            "name": "a place name",
                            "role": "a role",
                            "@referredType": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        ],
                        "characteristic": [
                          {
                            "name": "CoverageOption",
                            "value": "National",
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        ],
                        "relatedParty": [
                          {
                            "id": "333",
                            "href": "https://apixHost/tmf-api/partyManagement/v1/individual/333",
                            "name": "John Doe",
                            "role": "seller",
                            "@referredType": "a type"
                          }
                        ],
                        "productRelationship": [
                          {
                            "type": "reliesOn"
                          }
                        ],
                        "productSpecification": {
                          "id": "14395",
                          "href": "https://apixHost/tmf-api/productCatalogManagement/v2/productSpecification/14395",
                          "version": "1",
                          "name": "A nsme",
                          "targetResourceSchema": {
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        },
                        "@type": "a type",
                        "@schemaLocation": "a schema location"
                      },
                      "orderItemRelationship": [
                        {
                          "type": "reliesOn",
                          "id": "45"
                        }
                      ],
                      "qualification": [
                        {
                          "id": "12",
                          "href": "https://apixHost/tmf-api/productOfferingQualificationManagement/v1/productOfferingQualification/12",
                          "qualificationItemId": "1",
                          "@referredType": "a type"
                        }
                      ],
                      "payment": [
                        {
                          "id": "2365",
                          "href": "https://apixHost/tmf-api/paymentManagement/v1/payment/2365",
                          "name": "shop payment cash #2365",
                          "@referredType": "cash"
                        }
                      ],
                      "itemTerm": [
                        {
                          "name": "12MonthsCommitment",
                          "description": "12 Months commitment",
                          "duration": {
                            "value": 12,
                            "unit": "Months"
                          },
                          "@type": "a type"
                        }
                      ],
                      "orderItem": [
                        null
                      ]
                    }
                  ],
                  "type": "ER Service"
                }
              ]
            },
            "headers": {
              "X-Total-Count": {
                "description": "",
                "type": "string"
              },
              "X-Result-Count": {
                "description": "",
                "type": "string"
              },
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized\n\nList of supported error codes:\n- 40: Missing credentials\n- 41: Invalid credentials\n- 42: Expired credentials",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden\n\nList of supported error codes:\n- 50: Access denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many requests",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable\n\nList of supported error codes:\n- 5: The service is temporarily unavailable\n- 6: Orange API is over capacity, retry later !",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "PRODUCT_ORDERING_ALL",
              "TMF622_PRODUCT_ORDERING_MANAGEMENT_ALL"
            ]
          }
        ]
      }
    },
    "/productOrder/{productOrderId}": {
      "get": {
        "tags": [
          "ProductOrder"
        ],
        "operationId": "productOrderGet",
        "summary": "Retrieve a product order",
        "description": "This operation retrieves  a product order entity. Attribute  selection  is enabled for all first level attributes. Filtering on sub-resources  may  be available  depending on the compliance  level supported by an implementation.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "productOrderId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A string identifier representing the ID of the requested Product Order",
            "x-example": 11
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attributes selection",
            "type": "string",
            "x-example": "externalId, priority, description"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            },
            "examples": {
              "application/json": {
                "id": "11",
                "href": "https://apixHost/tmf-api/productOrdering/v4/productOrder/11",
                "externalId": "Telco01",
                "priority": "1",
                "description": "Order illustration UC1",
                "category": "Residential",
                "state": "Completed",
                "orderDate": "2018-12-17T13:01:35.745Z",
                "completionDate": "2018-12-17T13:01:35.745Z",
                "requestedStartDate": "2018-12-17T13:01:35.745Z",
                "requestedCompletionDate": "2018-12-17T13:01:35.745Z",
                "expectedCompletionDate": "2018-12-17T13:01:35.745Z",
                "notificationContact": "jean.pontus@tmforum.com",
                "@baseType": "productOrder",
                "@type": "productOrder",
                "@schemaLocation": "a schema location",
                "channel": {
                  "id": "1",
                  "href": "http://referenceToAChannel",
                  "name": "store",
                  "role": "submitChannel",
                  "@type": "store"
                },
                "note": {
                  "text": "Order to illustrate UC1",
                  "date": "2018-12-17T13:01:35.745Z",
                  "author": "Jean-Lyuc Tymen"
                },
                "relatedParty": [
                  {
                    "id": "11",
                    "href": "https://apixHost/tmf-api/partyManagement/v1/individual/11",
                    "name": "Joe Doe",
                    "role": "customer",
                    "@referredType": "individualParty"
                  }
                ],
                "payment": [
                  {
                    "id": "2365",
                    "href": "https://apixHost/tmf-api/paymentManagement/v1/payment/2365",
                    "name": "shop payment cash #2365",
                    "@referredType": "cash"
                  }
                ],
                "billingAccount": {
                  "id": "BA1513",
                  "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                  "name": "BA01",
                  "@referredType": "billingAccount"
                },
                "orderTotalPrice": [
                  {
                    "name": "Final price",
                    "description": "Total price of the order",
                    "priceType": "recuring",
                    "unitOfMeasure": "Euros",
                    "recurringChargePeriod": "monthly",
                    "@type": "a type",
                    "@schemaLocation": "a schema location",
                    "price": {
                      "taxIncludedAmount": {
                        "value": 19,
                        "unit": "Euros"
                      },
                      "dutyFreeAmount": {
                        "value": 0,
                        "unit": "Euros"
                      },
                      "taxRate": 0.19,
                      "percentage": 19,
                      "@type": "a type",
                      "@schemaLocation": "a schema location"
                    },
                    "priceAlteration": [
                      {
                        "name": "20Discount3Months",
                        "description": "discount 20% for 3 months",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "applicationDuration": "a duration",
                        "priority": 1,
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "@type": "a type",
                        "@schemaLocation": "a schema location"
                      }
                    ],
                    "billingAccount": {
                      "id": "BA1513",
                      "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                      "name": "BA01",
                      "@referredType": "billingAccount"
                    }
                  }
                ],
                "orderItem": [
                  {
                    "id": "110",
                    "action": "add",
                    "state": "Completed",
                    "quantity": 1,
                    "@type": "a type",
                    "@schemaLocation": "a schema location",
                    "appointment": {
                      "href": "https://apixHost/appointment/v3/appointment/11",
                      "id": "11",
                      "@referredType": "a type"
                    },
                    "billingAccount": {
                      "id": "BA1513",
                      "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                      "name": "BA01",
                      "@referredType": "billingAccount"
                    },
                    "itemPrice": [
                      {
                        "name": "monthly price",
                        "description": "TMF Tariff Plan monthly fee",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "@type": "a type",
                        "@schemaLocation": "a schema location",
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "priceAlteration": [
                          {
                            "name": "20Discount3Months",
                            "description": "discount 20% for 3 months",
                            "priceType": "recuring",
                            "unitOfMeasure": "Euros",
                            "recurringChargePeriod": "monthly",
                            "applicationDuration": "a duration",
                            "priority": 1,
                            "price": {
                              "taxIncludedAmount": {
                                "value": 19,
                                "unit": "Euros"
                              },
                              "dutyFreeAmount": {
                                "value": 0,
                                "unit": "string"
                              },
                              "taxRate": 0.19,
                              "percentage": 19,
                              "@type": "a type",
                              "@schemaLocation": "a schema location"
                            },
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        ],
                        "billingAccount": {
                          "id": "BA1513",
                          "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                          "name": "BA01",
                          "@referredType": "billingAccount"
                        }
                      }
                    ],
                    "itemTotalPrice": [
                      {
                        "name": "Item price",
                        "description": "Total price of the item",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "@type": "a type",
                        "@schemaLocation": "a schema location",
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "priceAlteration": [
                          {
                            "name": "20Discount3Months",
                            "description": "discount 20% for 3 months",
                            "priceType": "recuring",
                            "unitOfMeasure": "Euros",
                            "recurringChargePeriod": "monthly",
                            "applicationDuration": "a duration",
                            "priority": 1,
                            "price": {
                              "taxIncludedAmount": {
                                "value": 19,
                                "unit": "Euros"
                              },
                              "dutyFreeAmount": {
                                "value": 0,
                                "unit": "string"
                              },
                              "taxRate": 0.19,
                              "percentage": 19,
                              "@type": "a type",
                              "@schemaLocation": "a schema location"
                            },
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        ],
                        "billingAccount": {
                          "id": "BA1513",
                          "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                          "name": "BA01",
                          "@referredType": "billingAccount"
                        }
                      }
                    ],
                    "productOffering": {
                      "id": "14344",
                      "href": "https://apixHost/tmf-api/productCatalogManagement/v2/productOffering/14344",
                      "name": "TMF TariffPlan",
                      "@referredType": "a type"
                    },
                    "product": {
                      "id": "14395",
                      "href": "https://apixHost/tmf-api/productInventory/v3/product/14395",
                      "name": "Product Name",
                      "place": [
                        {
                          "id": "222",
                          "href": "https://apixHost/tmf-api/productInventory/v3/product/222",
                          "name": "a place name",
                          "role": "a role",
                          "@referredType": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      ],
                      "characteristic": [
                        {
                          "name": "CoverageOption",
                          "value": "National",
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      ],
                      "relatedParty": [
                        {
                          "id": "333",
                          "href": "https://apixHost/tmf-api/partyManagement/v1/individual/333",
                          "name": "John Doe",
                          "role": "seller",
                          "@referredType": "a type"
                        }
                      ],
                      "productRelationship": [
                        {
                          "type": "reliesOn"
                        }
                      ],
                      "productSpecification": {
                        "id": "14395",
                        "href": "https://apixHost/tmf-api/productCatalogManagement/v2/productSpecification/14395",
                        "version": "1",
                        "name": "A nsme",
                        "targetResourceSchema": {
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      },
                      "@type": "a type",
                      "@schemaLocation": "a schema location"
                    },
                    "orderItemRelationship": [
                      {
                        "type": "reliesOn",
                        "id": "45"
                      }
                    ],
                    "qualification": [
                      {
                        "id": "12",
                        "href": "https://apixHost/tmf-api/productOfferingQualificationManagement/v1/productOfferingQualification/12",
                        "qualificationItemId": "1",
                        "@referredType": "a type"
                      }
                    ],
                    "payment": [
                      {
                        "id": "2365",
                        "href": "https://apixHost/tmf-api/paymentManagement/v1/payment/2365",
                        "name": "shop payment cash #2365",
                        "@referredType": "cash"
                      }
                    ],
                    "itemTerm": [
                      {
                        "name": "12MonthsCommitment",
                        "description": "12 Months commitment",
                        "duration": {
                          "value": 12,
                          "unit": "Months"
                        },
                        "@type": "a type"
                      }
                    ],
                    "orderItem": [
                      null
                    ]
                  }
                ],
                "type": "ER Service"
              }
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized\n\nList of supported error codes:\n- 40: Missing credentials\n- 41: Invalid credentials\n- 42: Expired credentials",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden\n\nList of supported error codes:\n- 50: Access denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many requests",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable\n\nList of supported error codes:\n- 5: The service is temporarily unavailable\n- 6: Orange API is over capacity, retry later !",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "PRODUCT_ORDERING_ALL",
              "TMF622_PRODUCT_ORDERING_MANAGEMENT_ALL"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ProductOrder"
        ],
        "operationId": "productOrderPatch",
        "summary": "Patch a product order",
        "description": "This    operation    allows    partial    updates    of    a    product    order    entity.    Support    of    json/merge (https://tools.ietf.org/html/rfc7386)  is  mandatory,  support  of  json/patch  (http://tools.ietf.org/html/rfc5789)  is optional.\nPatchable and not patchable attributes are provided in the specifications document.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Content-Type",
            "description": "Type of data sent in the request.",
            "in": "header",
            "type": "string",
            "required": true,
            "x-example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "productOrderId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A string identifier representing the ID of the requested Product Order",
            "x-example": 11
          },
          {
            "name": "productOrder",
            "required": true,
            "in": "body",
            "description": "The object representing the the fields to be updated",
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            },
            "x-examples": {
              "application/json": {
                "description": "Update description"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            },
            "examples": {
              "application/json": {
                "id": "11",
                "href": "https://apixHost/tmf-api/productOrdering/v4/productOrder/11",
                "externalId": "Telco01",
                "priority": "1",
                "description": "Order illustration UC1",
                "category": "Residential",
                "state": "Completed",
                "orderDate": "2018-12-17T13:01:35.745Z",
                "completionDate": "2018-12-17T13:01:35.745Z",
                "requestedStartDate": "2018-12-17T13:01:35.745Z",
                "requestedCompletionDate": "2018-12-17T13:01:35.745Z",
                "expectedCompletionDate": "2018-12-17T13:01:35.745Z",
                "notificationContact": "jean.pontus@tmforum.com",
                "@baseType": "productOrder",
                "@type": "productOrder",
                "@schemaLocation": "a schema location",
                "channel": {
                  "id": "1",
                  "href": "http://referenceToAChannel",
                  "name": "store",
                  "role": "submitChannel",
                  "@type": "store"
                },
                "note": {
                  "text": "Order to illustrate UC1",
                  "date": "2018-12-17T13:01:35.745Z",
                  "author": "Jean-Lyuc Tymen"
                },
                "relatedParty": [
                  {
                    "id": "11",
                    "href": "https://apixHost/tmf-api/partyManagement/v1/individual/11",
                    "name": "Joe Doe",
                    "role": "customer",
                    "@referredType": "individualParty"
                  }
                ],
                "payment": [
                  {
                    "id": "2365",
                    "href": "https://apixHost/tmf-api/paymentManagement/v1/payment/2365",
                    "name": "shop payment cash #2365",
                    "@referredType": "cash"
                  }
                ],
                "billingAccount": {
                  "id": "BA1513",
                  "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                  "name": "BA01",
                  "@referredType": "billingAccount"
                },
                "orderTotalPrice": [
                  {
                    "name": "Final price",
                    "description": "Total price of the order",
                    "priceType": "recuring",
                    "unitOfMeasure": "Euros",
                    "recurringChargePeriod": "monthly",
                    "@type": "a type",
                    "@schemaLocation": "a schema location",
                    "price": {
                      "taxIncludedAmount": {
                        "value": 19,
                        "unit": "Euros"
                      },
                      "dutyFreeAmount": {
                        "value": 0,
                        "unit": "Euros"
                      },
                      "taxRate": 0.19,
                      "percentage": 19,
                      "@type": "a type",
                      "@schemaLocation": "a schema location"
                    },
                    "priceAlteration": [
                      {
                        "name": "20Discount3Months",
                        "description": "discount 20% for 3 months",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "applicationDuration": "a duration",
                        "priority": 1,
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "@type": "a type",
                        "@schemaLocation": "a schema location"
                      }
                    ],
                    "billingAccount": {
                      "id": "BA1513",
                      "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                      "name": "BA01",
                      "@referredType": "billingAccount"
                    }
                  }
                ],
                "orderItem": [
                  {
                    "id": "110",
                    "action": "add",
                    "state": "Completed",
                    "quantity": 1,
                    "@type": "a type",
                    "@schemaLocation": "a schema location",
                    "appointment": {
                      "href": "https://apixHost/appointment/v3/appointment/11",
                      "id": "11",
                      "@referredType": "a type"
                    },
                    "billingAccount": {
                      "id": "BA1513",
                      "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                      "name": "BA01",
                      "@referredType": "billingAccount"
                    },
                    "itemPrice": [
                      {
                        "name": "monthly price",
                        "description": "TMF Tariff Plan monthly fee",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "@type": "a type",
                        "@schemaLocation": "a schema location",
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "priceAlteration": [
                          {
                            "name": "20Discount3Months",
                            "description": "discount 20% for 3 months",
                            "priceType": "recuring",
                            "unitOfMeasure": "Euros",
                            "recurringChargePeriod": "monthly",
                            "applicationDuration": "a duration",
                            "priority": 1,
                            "price": {
                              "taxIncludedAmount": {
                                "value": 19,
                                "unit": "Euros"
                              },
                              "dutyFreeAmount": {
                                "value": 0,
                                "unit": "string"
                              },
                              "taxRate": 0.19,
                              "percentage": 19,
                              "@type": "a type",
                              "@schemaLocation": "a schema location"
                            },
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        ],
                        "billingAccount": {
                          "id": "BA1513",
                          "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                          "name": "BA01",
                          "@referredType": "billingAccount"
                        }
                      }
                    ],
                    "itemTotalPrice": [
                      {
                        "name": "Item price",
                        "description": "Total price of the item",
                        "priceType": "recuring",
                        "unitOfMeasure": "Euros",
                        "recurringChargePeriod": "monthly",
                        "@type": "a type",
                        "@schemaLocation": "a schema location",
                        "price": {
                          "taxIncludedAmount": {
                            "value": 19,
                            "unit": "Euros"
                          },
                          "dutyFreeAmount": {
                            "value": 0,
                            "unit": "Euros"
                          },
                          "taxRate": 0.19,
                          "percentage": 19,
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        },
                        "priceAlteration": [
                          {
                            "name": "20Discount3Months",
                            "description": "discount 20% for 3 months",
                            "priceType": "recuring",
                            "unitOfMeasure": "Euros",
                            "recurringChargePeriod": "monthly",
                            "applicationDuration": "a duration",
                            "priority": 1,
                            "price": {
                              "taxIncludedAmount": {
                                "value": 19,
                                "unit": "Euros"
                              },
                              "dutyFreeAmount": {
                                "value": 0,
                                "unit": "string"
                              },
                              "taxRate": 0.19,
                              "percentage": 19,
                              "@type": "a type",
                              "@schemaLocation": "a schema location"
                            },
                            "@type": "a type",
                            "@schemaLocation": "a schema location"
                          }
                        ],
                        "billingAccount": {
                          "id": "BA1513",
                          "href": "https://apixHost/tmf-api/accountManagement/v2/billingAccount/BA1513",
                          "name": "BA01",
                          "@referredType": "billingAccount"
                        }
                      }
                    ],
                    "productOffering": {
                      "id": "14344",
                      "href": "https://apixHost/tmf-api/productCatalogManagement/v2/productOffering/14344",
                      "name": "TMF TariffPlan",
                      "@referredType": "a type"
                    },
                    "product": {
                      "id": "14395",
                      "href": "https://apixHost/tmf-api/productInventory/v3/product/14395",
                      "name": "Product Name",
                      "place": [
                        {
                          "id": "222",
                          "href": "https://apixHost/tmf-api/productInventory/v3/product/222",
                          "name": "a place name",
                          "role": "a role",
                          "@referredType": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      ],
                      "characteristic": [
                        {
                          "name": "CoverageOption",
                          "value": "National",
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      ],
                      "relatedParty": [
                        {
                          "id": "333",
                          "href": "https://apixHost/tmf-api/partyManagement/v1/individual/333",
                          "name": "John Doe",
                          "role": "seller",
                          "@referredType": "a type"
                        }
                      ],
                      "productRelationship": [
                        {
                          "type": "reliesOn"
                        }
                      ],
                      "productSpecification": {
                        "id": "14395",
                        "href": "https://apixHost/tmf-api/productCatalogManagement/v2/productSpecification/14395",
                        "version": "1",
                        "name": "A nsme",
                        "targetResourceSchema": {
                          "@type": "a type",
                          "@schemaLocation": "a schema location"
                        }
                      },
                      "@type": "a type",
                      "@schemaLocation": "a schema location"
                    },
                    "orderItemRelationship": [
                      {
                        "type": "reliesOn",
                        "id": "45"
                      }
                    ],
                    "qualification": [
                      {
                        "id": "12",
                        "href": "https://apixHost/tmf-api/productOfferingQualificationManagement/v1/productOfferingQualification/12",
                        "qualificationItemId": "1",
                        "@referredType": "a type"
                      }
                    ],
                    "payment": [
                      {
                        "id": "2365",
                        "href": "https://apixHost/tmf-api/paymentManagement/v1/payment/2365",
                        "name": "shop payment cash #2365",
                        "@referredType": "cash"
                      }
                    ],
                    "itemTerm": [
                      {
                        "name": "12MonthsCommitment",
                        "description": "12 Months commitment",
                        "duration": {
                          "value": 12,
                          "unit": "Months"
                        },
                        "@type": "a type"
                      }
                    ],
                    "orderItem": [
                      null
                    ]
                  }
                ],
                "type": "ER Service"
              }
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized\n\nList of supported error codes:\n- 40: Missing credentials\n- 41: Invalid credentials\n- 42: Expired credentials",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden\n\nList of supported error codes:\n- 50: Access denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many requests",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable\n\nList of supported error codes:\n- 5: The service is temporarily unavailable\n- 6: Orange API is over capacity, retry later !",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "PRODUCT_ORDERING_ALL",
              "TMF622_PRODUCT_ORDERING_MANAGEMENT_ALL"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductOrder"
        ],
        "operationId": "productOrderDelete",
        "summary": "Delete a product order",
        "description": "This operation deletes a product order entity. This operation is available only to ADMIN API users.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "* Contains the APIX OAuth token as Bearer token.\n* Enables the developer application access to the request resource.\n* E.g. Authorization:Bearer FhNX09SlBO4G0XRzTPAGustXtsWi",
            "required": true,
            "type": "string",
            "x-example": "Bearer FhNX09SlBO4G0XRzTPAGustXtsWi"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.",
            "required": false,
            "type": "string",
            "x-example": "application/json"
          },
          {
            "name": "vf-trace-transaction-id",
            "in": "header",
            "description": "* Consumer specified unique transaction identifier.\n * Enables requests from consumers to be captured end to end.\n* If not provided in the request, one is generated by the backend.\n * Format: Case insensitive, RFC 2616.",
            "required": false,
            "type": "string",
            "x-example": "57072d7e-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "vf_ext_bp_id",
            "in": "header",
            "description": "A unique use case ID used for logging and end-to-end tracing.",
            "required": false,
            "type": "string",
            "x-example": "688c911a-92d4-11e7-abc4-cec278b6b50a"
          },
          {
            "name": "productOrderId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A string identifier representing the ID of the requested Product Order",
            "x-example": 11
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized\n\nList of supported error codes:\n- 40: Missing credentials\n- 41: Invalid credentials\n- 42: Expired credentials",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden\n\nList of supported error codes:\n- 50: Access denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many requests",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Service Unavailable\n\nList of supported error codes:\n- 5: The service is temporarily unavailable\n- 6: Orange API is over capacity, retry later !",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\"",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "APIX common errors as described at\n https://.com/tempcps/display/AF/Common+Error+Codes",
            "schema": {
              "$ref": "#/definitions/ErrorRepresentation"
            },
            "headers": {
              "vf-trace-transaction-id": {
                "type": "string",
                "description": "A unique transaction ID. If provided, the same value is\r\n returned, Otherwise a new transaction id is generated."
              },
              "Content-Type": {
                "type": "string",
                "description": "Always \"application/json"
              },
              "Cache-Control": {
                "description": "Cache control header.",
                "type": "string"
              },
              "Expires": {
                "description": "Expiration header token.",
                "type": "string"
              },
              "Pragma": {
                "description": "to be picked from the backend if available otherwise set as \"no-cache\".",
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "apix_oauth": [
              "PRODUCT_ORDERING_ALL",
              "TMF622_PRODUCT_ORDERING_MANAGEMENT_ALL"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "PriorityType": {
      "description": "",
      "type": "string",
      "enum": [
        "0",
        "1",
        "2",
        "3",
        "4"
      ]
    },
    "ActionType": {
      "description": "",
      "type": "string",
      "enum": [
        "add",
        "modify",
        "noChange",
        "delete"
      ]
    },
    "StateType": {
      "description": "",
      "type": "string",
      "enum": [
        "acknowledged",
        "inProgress",
        "cancelled",
        "completed",
        "rejected",
        "pending",
        "held",
        "failed",
        "partial"
      ]
    },
    "RelationShipType": {
      "description": "",
      "type": "string",
      "enum": [
        "reliesOn",
        "brings",
        "hasParent",
        "hasChild"
      ]
    },
    "PriceType": {
      "description": "",
      "type": "string",
      "enum": [
        "recuring",
        "oneTime",
        "usage"
      ]
    },
    "ErrorRepresentation": {
      "description": "This structure is a representation of an error.",
      "required": [
        "code",
        "reason",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "integer",
          "format": "int32"
        },
        "reason": {
          "description": "Error reason",
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        },
        "status": {
          "description": "Error status",
          "type": "string"
        },
        "referenceError": {
          "description": "Error reference",
          "type": "string"
        },
        "@type": {
          "description": "Type of error",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "Link to the schema describing this REST resource.",
          "type": "string"
        }
      }
    },
    "BillingAccountRef": {
      "description": "A BillingAccount is a detailed description of a bill structure.",
      "required": [
        "id",
        "href"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the billing account",
          "type": "string"
        },
        "href": {
          "description": "Unique reference of the billing account",
          "type": "string"
        },
        "name": {
          "description": "Name of the billing account",
          "type": "string"
        },
        "@referredType": {
          "description": "Indicates the (class) type of resource.",
          "type": "string"
        }
      }
    },
    "Place": {
      "description": "Place defines the places where the products are sold or delivered.",
      "required": [
        "role"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the place",
          "type": "string"
        },
        "href": {
          "description": "Unique reference of the place",
          "type": "string"
        },
        "name": {
          "description": "A user-friendly name for the place, such as 'Paris Store', 'Main Home'.",
          "type": "string"
        },
        "role": {
          "description": "Role of the place",
          "type": "string"
        },
        "@referredType": {
          "description": "Type of Place.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "Link to the schema describing this REST resource.",
          "type": "string"
        }
      }
    },
    "AppointmentRef": {
      "description": "If the product order item requires an appointment between the service provider and the customer.",
      "required": [
        "href",
        "id"
      ],
      "type": "object",
      "properties": {
        "href": {
          "description": "Hyperlink to access the appointment",
          "type": "string"
        },
        "id": {
          "description": "id of the appointment",
          "type": "string"
        },
        "@referredType": {
          "description": "Indicates the (class) type of resource.",
          "type": "string"
        }
      }
    },
    "ProductOrder": {
      "description": "A product order representation",
      "required": [
        "id",
        "orderItem"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "ID created on repository side (OM system)",
          "type": "string"
        },
        "href": {
          "description": "Hyperlink to access the order",
          "type": "string"
        },
        "externalId": {
          "description": "ID given by the consumer and only understandable by him (to facilitate his searches afterwards).",
          "type": "string"
        },
        "priority": {
          "description": "A string. A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest). Implementation could enrich or use other set of values",
          "$ref": "#/definitions/PriorityType"
        },
        "description": {
          "description": "Description of the product order",
          "type": "string"
        },
        "category": {
          "description": "Used to categorize the order from a business perspective that can be useful for the OM system (e.g. 'enterprise', 'residential', ...).",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/StateType",
          "description": "A string. Tracks the lifecycle status of the product order, such as Acknowledged, Rejected, InProgress, Pending and so on."
        },
        "orderDate": {
          "description": "Date when the order was created",
          "type": "string",
          "format": "date-time"
        },
        "completionDate": {
          "description": "Date when the order was completed.",
          "type": "string",
          "format": "date-time"
        },
        "requestedStartDate": {
          "description": "Order start date wished by the requestor",
          "type": "string",
          "format": "date-time"
        },
        "requestedCompletionDate": {
          "description": "Requested delivery date from the requestor perspective",
          "type": "string",
          "format": "date-time"
        },
        "expectedCompletionDate": {
          "description": "Expected delivery date amended by the provider",
          "type": "string",
          "format": "date-time"
        },
        "notificationContact": {
          "description": "Contact attached to the order to send back information regarding this order",
          "type": "string"
        },
        "@baseType": {
          "description": "Indicates the base type of the resource. Here can be 'ProductOrder'.",
          "type": "string"
        },
        "@type": {
          "description": "Indicates the type of resource. Here can be 'ProductOrder'.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A link to the schema describing this REST resource.",
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/Channel"
        },
        "note": {
          "$ref": "#/definitions/Note"
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPartyRef"
          },
          "description": "A list of related party references (RelatedPartyRef [*]). A related party defines party or party role linked to a specific entity."
        },
        "payment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentRef"
          },
          "description": "A list of payment references (PaymentRef [*]). If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order."
        },
        "billingAccount": {
          "$ref": "#/definitions/BillingAccountRef"
        },
        "orderTotalPrice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderPrice"
          },
          "description": "A list of order prices (OrderPrice [*]). An amount, usually of money, that represents the actual price paid by the Customer for this item or this order."
        },
        "orderItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          },
          "description": "A list of order items (OrderItem [1..*])."
        },
        "type": {
          "type": "string",
          "description": "A Greek specific extension to TMF, used to identify the Product Order type."
        }
      }
    },
    "Note": {
      "description": "Extra information about a given entity",
      "required": [
        "text"
      ],
      "type": "object",
      "properties": {
        "text": {
          "description": "Texte of the note",
          "type": "string"
        },
        "date": {
          "description": "Date of the note",
          "type": "string",
          "format": "date-time"
        },
        "author": {
          "description": "Author of the note",
          "type": "string"
        }
      }
    },
    "RelatedPartyRef": {
      "description": "A related party defines party or party role linked to a specific entity.",
      "required": [
        "id",
        "href",
        "role"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the related party",
          "type": "string"
        },
        "href": {
          "description": "Reference of the related party, could be a party reference or a party role reference.",
          "type": "string"
        },
        "name": {
          "description": "Name of the related party",
          "type": "string"
        },
        "role": {
          "description": "Role played by the related party",
          "type": "string"
        },
        "@referredType": {
          "description": "Indicates the base (class) type of the party.",
          "type": "string"
        }
      }
    },
    "OrderItem": {
      "description": "An identified part of the order. A product order is decomposed into one or more order items.",
      "required": [
        "id",
        "action"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier of the line item (generally it is a sequence number 01, 02, 03, ...)",
          "type": "string"
        },
        "action": {
          "$ref": "#/definitions/ActionType",
          "description": "A string. Can be \"add\" / \"modify\" / \"no_change\"/ \"delete\""
        },
        "state": {
          "$ref": "#/definitions/StateType",
          "description": "A string. State of the order item : described in the state machine diagram."
        },
        "quantity": {
          "description": "Quantity ordered",
          "type": "integer",
          "format": "int64"
        },
        "@type": {
          "description": "Indicates the type of resource. Here it can be a type of productOrderItem.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "An URL to the schema describing this REST resource.",
          "type": "string"
        },
        "appointment": {
          "$ref": "#/definitions/AppointmentRef"
        },
        "billingAccount": {
          "$ref": "#/definitions/BillingAccountRef"
        },
        "itemPrice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderPrice"
          },
          "description": "A list of order prices (OrderPrice [*]). An amount, usually of money, that represents the actual price paid by the Customer for this item or this order."
        },
        "itemTotalPrice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderPrice"
          },
          "description": "A list of order prices (OrderPrice [*]). An amount, usually of money, that represents the actual price paid by the Customer for this item or this order."
        },
        "productOffering": {
          "$ref": "#/definitions/ProductOfferingRef"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "orderItemRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemRelationShip"
          },
          "description": "A list of order item relationships (OrderItemRelationship [*]). Linked order items to the one instantiate"
        },
        "qualification": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QualificationRef"
          },
          "description": "A list of qualification references (QualificationRef [*]). It could be a serviceQualification or a productOfferingQualification that has been executed previously and captured in the productOrder to provide \"eligibility\" information."
        },
        "payment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentRef"
          },
          "description": "A list of payment references (PaymentRef [*]). If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order."
        },
        "itemTerm": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderTerm"
          },
          "description": "A list of order terms (OrderTerm [*]). Description of a productTerm linked to this orderItem. This reprsent a commitment with a duration."
        },
        "orderItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          },
          "description": "A list of order items (OrderItem [*])."
        }
      }
    },
    "OrderPrice": {
      "description": "An amount, usually of money, that represents the actual price paid by the Customer for this item or this order.",
      "required": [
        "priceType",
        "price"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "A short descriptive name such as \"Subscription price\".",
          "type": "string"
        },
        "description": {
          "description": "A narrative that explains in detail the semantics of this order item price",
          "type": "string"
        },
        "priceType": {
          "$ref": "#/definitions/PriceType",
          "description": "A string. A category that describes the price, such as recurring, discount, allowance, penalty, and so forth."
        },
        "unitOfMeasure": {
          "description": "Could be minutes, gigaBytes,...",
          "type": "string"
        },
        "recurringChargePeriod": {
          "description": "Could be month, week,...",
          "type": "string"
        },
        "@type": {
          "description": "Indicate the type of orderPrice.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A link to the schema describing this orderPrice extension.",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "priceAlteration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceAlteration"
          },
          "description": "A list of price alterations (PriceAlteration [*]). Is an amount, usually of money, that modifies the price charged for an order item."
        },
        "billingAccount": {
          "$ref": "#/definitions/BillingAccountRef"
        }
      }
    },
    "ProductOfferingRef": {
      "description": "A product offering represents entities that are order-able from the provider of the catalog, this resource includes pricing information.",
      "required": [
        "id",
        "href"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the product offering.",
          "type": "string"
        },
        "href": {
          "description": "Reference of the product offering.",
          "type": "string"
        },
        "name": {
          "description": "Name of the product offering.",
          "type": "string"
        },
        "@referredType": {
          "description": "Indicate the class (type) of product offering.",
          "type": "string"
        }
      }
    },
    "Product": {
      "description": "Configure the product characteristics (only configurable characteristics and necessary only if a non default value is selected) and/or identify the product that needs to be modified/deleted.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A string. Unique identifier of the product.",
          "type": "string"
        },
        "href": {
          "description": "A string. Reference of the product.",
          "type": "string"
        },
        "name": {
          "description": "A string. Name of the product.",
          "type": "string"
        },
        "place": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Place"
          },
          "description": "A list of places (Place [*]). Place reference. Place defines the places where the products are sold or delivered."
        },
        "characteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCharacteristic"
          },
          "description": "A list of product characteristics (ProductCharacteristic [*]). Characteristics of the product to instantiate or to modify."
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPartyRef"
          },
          "description": "A list of related party references (RelatedPartyRef [*]). A related party defines party or party role linked to a specific entity."
        },
        "productRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductRelationship"
          },
          "description": "A list of product relationships (ProductRelationship [*]). Represents a relationship between products - which potentially holds an entire product object or a product reference (with partial content)."
        },
        "productSpecification": {
          "$ref": "#/definitions/ProductSpecificationRef"
        },
        "@type": {
          "description": "A string. Type of product",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A string. Link to the schema describing this REST resource.",
          "type": "string"
        }
      }
    },
    "OrderItemRelationShip": {
      "description": "Linked order items to the one instantiate.",
      "required": [
        "type",
        "id"
      ],
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/RelationShipType",
          "description": "A string. Type of the order item relationship."
        },
        "id": {
          "description": "The identifier of the related ordered item.",
          "type": "string"
        }
      }
    },
    "ProductCharacteristic": {
      "description": "Characteristics of the product to instantiate or to modify.",
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the characteristic.",
          "type": "string"
        },
        "value": {
          "description": "Value of the characteristic.",
          "type": "string"
        },
        "@type": {
          "description": "Indicates the (class) type of resource",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "This field provided a link to the schema describing this REST resource.",
          "type": "string"
        }
      }
    },
    "ProductRelationship": {
      "description": "",
      "required": [
        "type",
        "product"
      ],
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/RelationShipType",
          "description": "  A string. Type of the product relationship. It can be : \"bundled\" if the product is a bundle and you want to describe the \"bundled\" products inside this bundle. \"reliesOn\" if the product needs another already owned product to rely on (e.g. an option on an already owned mobile access product).  \"targets\" or \"isTargeted\" (depending on the way of expressing the link) for any other kind of links that may be useful."
        },
        "product": {
          "$ref": "#/definitions/Product"
        }
      }
    },
    "Channel": {
      "description": "The channel defines the channel for selling product offerings where order has been submitted.",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of  the channel",
          "type": "string"
        },
        "href": {
          "description": "Unique reference of the channel",
          "type": "string"
        },
        "name": {
          "description": "Name of the channel",
          "type": "string"
        },
        "role": {
          "description": "Role of the channel - could be 'initChannel', 'submitChannel' for example.",
          "type": "string"
        },
        "@type": {
          "description": "Indicates the (class) type of resource.",
          "type": "string"
        }
      }
    },
    "PriceAlteration": {
      "description": "Is an amount, usually of money, that modifies the price charged for an order item.",
      "required": [
        "priceType"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "A string. A short descriptive name such as \"Monthly discount\".",
          "type": "string"
        },
        "description": {
          "description": "A string. A narrative that explains in detail the semantics of this order item price alteration.",
          "type": "string"
        },
        "priceType": {
          "$ref": "#/definitions/PriceType",
          "description": "A string. A category that describes the price such as recurring, one time and usage."
        },
        "unitOfMeasure": {
          "description": "A string. Could be minutes, GB...",
          "type": "string"
        },
        "recurringChargePeriod": {
          "description": "A string. Could be month, week...",
          "type": "string"
        },
        "applicationDuration": {
          "description": "An integer. Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge).",
          "type": "string"
        },
        "priority": {
          "description": "An integer. Priority level for applying this alteration among all the defined alterations on the order item price.",
          "type": "integer",
          "format": "int32"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "@type": {
          "description": "A string. Indicates the (class) type of the price alteration.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A string. Link to the schema describing this REST resource.",
          "type": "string"
        }
      }
    },
    "Price": {
      "description": "Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price Alteration.",
      "type": "object",
      "properties": {
        "taxIncludedAmount": {
          "$ref": "#/definitions/Money"
        },
        "dutyFreeAmount": {
          "$ref": "#/definitions/Money"
        },
        "taxRate": {
          "description": "Tax rate.",
          "type": "number",
          "format": "float"
        },
        "percentage": {
          "description": "Percentage to apply for ProdOfferPriceAlteration.",
          "type": "number",
          "format": "float"
        },
        "@type": {
          "description": "Indicates the (class) type of the price.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "Link to the schema describing this REST resource.",
          "type": "string"
        }
      }
    },
    "QualificationRef": {
      "description": "It could be a serviceQualification or a productOfferingQualification that has been executed previously and captured in the productOrder to provide 'eligibility' information.",
      "required": [
        "id",
        "href"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier of a pre-existing qualification.",
          "type": "string"
        },
        "href": {
          "description": "href of the qualification.",
          "type": "string"
        },
        "qualificationItemId": {
          "description": "Id of an item of a qualification.",
          "type": "string"
        },
        "@referredType": {
          "description": "Indicates the type of resource. Here it can be a type of qualification. (could a service qualification or a product offering qualification).",
          "type": "string"
        }
      }
    },
    "PaymentRef": {
      "description": "If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order.",
      "required": [
        "id",
        "href"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier of a payment.",
          "type": "string"
        },
        "href": {
          "description": "Hyperlink to access to a payment.",
          "type": "string"
        },
        "name": {
          "description": "Name of a payment.",
          "type": "string"
        },
        "@referredType": {
          "description": "Indicates the type of resource. Here can be 'cash', 'BankCard', ‘Check’, etc...",
          "type": "string"
        }
      }
    },
    "OrderTerm": {
      "description": "Description of a productTerm linked to this orderItem. This represent a commitment with a duration.\nDuration or name must be provided.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the productOrderTerm.",
          "type": "string"
        },
        "description": {
          "description": "Description of the productOrderTerm.",
          "type": "string"
        },
        "duration": {
          "$ref": "#/definitions/Quantity",
          "description": "A quantity (Quantity). Duration of the productOrderTerm."
        },
        "@type": {
          "description": "Indicated the type of Term.",
          "type": "string"
        }
      }
    },
    "Quantity": {
      "description": "",
      "required": [
        "value",
        "unit"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Amount",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "description": "Unit of measure",
          "type": "string"
        }
      }
    },
    "ProductSpecificationRef": {
      "description": "A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role.",
      "required": [
        "id",
        "href"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the product specification.",
          "type": "string"
        },
        "href": {
          "description": "Reference of the product specification.",
          "type": "string"
        },
        "version": {
          "description": "Version of the product specification.",
          "type": "string"
        },
        "name": {
          "description": "Name of the product specification.",
          "type": "string"
        },
        "targetResourceSchema": {
          "$ref": "#/definitions/TargetResourceSchema"
        }
      }
    },
    "Money": {
      "description": "A base / value business entity used to represent money.",
      "required": [
        "value",
        "unit"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "A positive floating point number.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "description": "Currency (ISO4217 norm uses 3 letters to define the currency).",
          "type": "string"
        }
      }
    },
    "POST_REQ_OrderItem": {
      "description": "",
      "required": [
        "id",
        "action"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier of the line item (generally it is a sequence number 01, 02, 03, ...)",
          "type": "string"
        },
        "action": {
          "$ref": "#/definitions/ActionType",
          "description": "A string. Can be \"add\" / \"modify\" / \"no_change\"/ \"delete\"."
        },
        "quantity": {
          "description": "Quantity ordered",
          "type": "integer",
          "format": "int64"
        },
        "@type": {
          "description": "Indicates the type of resource. Here it can be a type of productOrderItem.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "An URL to the schema describing this REST resource.",
          "type": "string"
        },
        "appointment": {
          "$ref": "#/definitions/AppointmentRef"
        },
        "billingAccount": {
          "$ref": "#/definitions/BillingAccountRef"
        },
        "itemPrice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderPrice"
          },
          "description": "A list of order prices (OrderPrice [*]). An amount, usually of money, that represents the actual price paid by the Customer for this item or this order."
        },
        "itemTotalPrice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderPrice"
          },
          "description": "A list of order prices (OrderPrice [*]). An amount, usually of money, that represents the actual price paid by the Customer for this item or this order."
        },
        "productOffering": {
          "$ref": "#/definitions/ProductOfferingRef"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "orderItemRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemRelationShip"
          },
          "description": "A list of order item relationships (OrderItemRelationship [*]). Linked order items to the one instantiate."
        },
        "qualification": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QualificationRef"
          },
          "description": "A list of qualification references (QualificationRef [*]). It could be a serviceQualification or a productOfferingQualification that has been executed previously and captured in the productOrder to provide \"eligibility\" information."
        },
        "payment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentRef"
          },
          "description": "A list of payment references (PaymentRef [*]). If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order."
        },
        "itemTerm": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderTerm"
          },
          "description": "A list of order terms (OrderTerm [*]). Description of a productTerm linked to this orderItem. This reprsent a commitment with a duration."
        },
        "orderItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          },
          "description": "A list of order items (OrderItem [*])."
        }
      }
    },
    "POST_REQ_ProductOrder": {
      "description": "",
      "required": [
        "orderItem",
        "externalId"
      ],
      "type": "object",
      "properties": {
        "externalId": {
          "description": "ID given by the consumer and only understandable by him (to facilitate his searches afterwards).",
          "type": "string"
        },
        "priority": {
          "$ref": "#/definitions/PriorityType",
          "description": "A string. A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest). Implementation could enrich or use other set of values"
        },
        "description": {
          "description": "Description of the product order",
          "type": "string"
        },
        "category": {
          "description": "Used to categorize the order from a business perspective that can be useful for the OM system (e.g. 'enterprise', 'residential', ...).",
          "type": "string"
        },
        "requestedStartDate": {
          "description": "Order start date wished by the requestor",
          "type": "string",
          "format": "date-time"
        },
        "requestedCompletionDate": {
          "description": "Requested delivery date from the requestor perspective",
          "type": "string",
          "format": "date-time"
        },
        "notificationContact": {
          "description": "Contact attached to the order to send back information regarding this order",
          "type": "string"
        },
        "@baseType": {
          "description": "Indicates the base type of the resource. Here can be 'ProductOrder'.",
          "type": "string"
        },
        "@type": {
          "description": "Indicates the type of resource. Here can be 'ProductOrder'.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A link to the schema describing this REST resource.",
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/Channel"
        },
        "note": {
          "$ref": "#/definitions/Note"
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPartyRef"
          },
          "description": "A list of related party references (RelatedPartyRef [*]). A related party defines party or party role linked to a specific entity."
        },
        "payment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentRef"
          },
          "description": "A list of payment references (PaymentRef [*]). If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order."
        },
        "billingAccount": {
          "$ref": "#/definitions/BillingAccountRef"
        },
        "orderTotalPrice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderPrice"
          },
          "description": "A list of order prices (OrderPrice [*]). An amount, usually of money, that represents the actual price paid by the Customer for this item or this order."
        },
        "orderItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/POST_REQ_OrderItem"
          },
          "description": "A list of order items (OrderItem [1..*])."
        },
        "type": {
          "type": "string",
          "description": "A Greek specific extension to TMF, used to identify the Product Order type."
        }
      }
    },
    "TargetResourceSchema": {
      "description": "Target to the schema describing the product spec resource (and type)",
      "required": [
        "@type",
        "@schemaLocation"
      ],
      "type": "object",
      "properties": {
        "@type": {
          "description": "Indicates the (class) type of resource",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "This field provided a link to the schema describing this REST resource",
          "type": "string"
        }
      }
    }
  }
}